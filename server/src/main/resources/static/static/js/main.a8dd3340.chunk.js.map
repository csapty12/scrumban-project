{"version":3,"sources":["components/Project/projectView/DeleteItem.js","actions/Types.js","reducers/SecurityReducer.js","reducers/index.js","store.js","components/Project/projectView/ProjectItem.js","model/Project.js","components/Project/projectView/DialogHeader.js","components/Project/projectView/ProjectDialog.js","components/Project/projectView/Dashboard.js","security/SetJwt.js","components/Layout/Navbar.js","components/Project/ProjectDashboard/Tickets/TicketDialog.js","components/Project/ProjectDashboard/Tickets/DeleteButton.js","components/Project/ProjectDashboard/Tickets/Ticket.js","components/Project/ProjectDashboard/InnerList.js","components/Project/ProjectDashboard/Tickets/CreateTicket.js","components/Project/ProjectDashboard/SwimLane.js","components/Project/ProjectDashboard/TicketBoard.js","components/Project/ProjectDashboard/ProjectDashboard.js","components/Layout/Landing.js","components/Layout/Login.js","components/Layout/Register.js","PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["DeleteItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDeleteProjectActiveDialog","setState","isDeleteDialogActive","handleDeleteProject","project","state","react_default","a","createElement","Dialog_default","open","onClose","aria-labelledby","aria-describedby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","projectName","DialogActions_default","Button_default","onClick","color","bind","autoFocus","Component","withStyles","theme","SET_CURRENT_USER","SET_ACTIVE_PROJECT","initialState","user","validToken","combineReducers","security","actionpayload","payload","arguments","length","undefined","action","type","objectSpread","activeProject","middleware","thunk","reactReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","apply","ProjectItem","handleOpenMenuClick","event","anchorEl","currentTarget","handleCloseMenuClick","option","deleteProject","handleDeleteProjectClick","handleUpdateProjectClick","updateProject","handleUpdateProjectClose","updateProjectInfo","projectInfo","activateProject","projectIdentifier","dispatch","serializedState","localStorage","setItem","_this2","_this$state","menuOpen","Boolean","deleteOpen","className","Card_default","CardHeader_default","react","IconButton_default","aria-label","aria-owns","aria-haspopup","MoreVert_default","Menu_default","MenuItem_default","key","projectView_DeleteItem","title","Link","to","concat","subheader","createdAt","Project","description","appBar","position","backgroundColor","classes","AppBar_default","Toolbar_default","Typography_default","variant","ProjectDialog","handleChange","projectState","target","name","value","handleSubmit","preventDefault","_this$state$project","slugifyProjectName","saveNewProject","_this$props$projectIn","updateProjectInformation","isDialogActive","errors","split","join","toUpperCase","axios","patch","then","json","data","catch","response","_this3","post","updateAllProjects","toConsumableArray","allProjects","_json$response$data","_this$props","scroll","fullWidth","maxWidth","projectView_DialogHeader","onSubmit","TextField_default","margin","label","onChange","defaultValue","error","multiline","rows","fontSize","Dashboard","handleIsProjectDialogActive","isProjectDialogActive","handleClose","handleProjectDelete","currentProjects","delete","filteredProjects","filter","item","get","createButton","disableRipple","projectView_ProjectDialog","map","projectView_ProjectItem","background","border","borderRadius","boxShadow","height","padding","setJwt","token","defaults","headers","common","Navbar","logoutUser","removeItem","location","href","_store$getState$secur","getState","navbar","grow","navbarText","entries","firstName","&:hover","textDecoration","flexGrow","TicketDialog","handleEditTicket","readOnlyMode","diableSaveButton","handleViewTicketDetailsDialog","openTicketDetails","isDragDisabled","handleViewPriorityDropDown","isDropDownActive","defineProperty","updatedTicket","ticket","summary","acceptanceCriteria","complexity","priority","handleUpdateTicket","projectSequence","flex","InputProps","readOnly","disabled","textField","marginLeft","spacing","unit","marginRight","DeleteButton","handleOpenDeleteTicketDialog","stopPropagation","isDeleteTicketDiaglogActive","handleCloseDeleteTicketDialog","handleDeleteTicket","swimLane","swimLaneId","removeTicket","size","Clear_default","deletIcon","Ticket","handleDelete","handleClickOpen","deleteButton","Tickets_DeleteButton","assertThisInitialized","ticketNumberPosition","openProjectDetailsDialog","Tickets_TicketDialog","isHovering","swimlaneId","priorityClass","react_beautiful_dnd_esm","index","draggableId","provided","snapshot","assign","draggableProps","dragHandleProps","ref","innerRef","droppableProps","classNames","cards","high","medium","low","style","isDragging","marginTop","marginBottom","borderLeft","InnerList","nextProps","tickets","Tickets_Ticket","CreateTicket","handleCreateTicketDialog","isCreateTicketDialogActive","handleViewDropDownMenu","openDropDown","handleDropDownOpen","handleDropDownClose","newTicket","saveNewTicket","isActive","swimlane","FormControl_default","InputLabel_default","htmlFor","Select_default","onOpen","inputProps","TaskList","styled","div","_templateObject","SwimLane","handleIsCreateTicketActive","isCreateTicketActive","addTicketToSwimLane","handleSwimLaneOptionsMenu","isSwimLaneOptionsMenuOpen","Tickets_CreateTicket","droppableId","isDraggingOver","transition","InnerList_InnerList","placeholder","TicketBoard","handleTicketDelete","projectTickets","swimLanes","allSwimLanes","forEach","objectKey","keys","indexOf","splice","newSwimlane","swimLaneOrder","handleAddTicket","newProjectTickets","push","toString","modifiedSwimLanes","singleSwimLane","onDragEnd","result","document","body","destination","source","start","finish","swimLaneData","newTaskIds","Array","from","ticketIds","reorderedTicketIds","modifiedSwimLane","tempAllSwimlanes","indexOfSwimLane","newState","updateSwimLaneIdOrder","startTaskIds","updatedStartSwimLane","finishTaskIds","updatedFinishSwimLane","modifiedStartSwimLane","modifiedFinishSwimLane","indexOfStartSwimLane","indexOfFinishSwimLane","udpateSwimLanesWithNewTickets","udpatedSwimLanes","of","projectError","onDragStart","ticketId","ProjectDashboard_SwimLane","newButton","ProjectDashboard","match","params","ProjectDashboard_TicketBoard","Landing","setRedirectToDashboard","redirectToDashboard","Redirect","Login","existingUser","email","password","decode","jwt_decode","autoComplete","noValidate","method","required","Register","setRedirect","redirectToLogin","newUser","lastName","confirmPassword","PrivateRoute","_ref","component","otherProps","objectWithoutProperties","Route","render","userJwt","getItem","decodedToken","currentTime","Date","now","exp","App","react_redux_es","HashRouter","Layout_Navbar","exact","path","Switch","src_PrivateRoute","hostname","ReactDOM","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"+iBAWMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAKRQ,gCAAkC,WAChCP,EAAKQ,SAAS,CACZC,sBAAsB,KARPT,EAYnBU,oBAAsB,SAAAC,GACpBX,EAAKD,MAAMW,oBAAoBC,GAC/BX,EAAKO,mCAZLP,EAAKY,MAAQ,CACXH,sBAAsB,GAHPT,wEAkBjB,OACEa,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,KAAMd,KAAKS,MAAMH,qBACjBS,QAASf,KAAKI,gCACdY,kBAAgB,qBAChBC,mBAAiB,4BAEjBP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAaQ,GAAG,sBAAsB,kBACtCT,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACED,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAmBQ,GAAG,4BAAtB,mCAEG,IAAMnB,KAAKJ,MAAMY,QAAQc,cAG9BZ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,KACED,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACEc,QAASzB,KAAKI,gCACdsB,MAAM,WAFR,MAMAhB,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACEc,QAASzB,KAAKO,oBAAoBoB,KAAK3B,KAAMA,KAAKJ,MAAMY,SACxDkB,MAAM,UACNE,WAAS,GAHX,gBAxCeC,aAoDVC,uBAtDA,SAAAC,GAAK,MAAK,IAsDVD,CAAmBnC,4BC9DrBqC,EAAmB,mBACnBC,EAAqB,qBCA5BC,EAAe,CACnBC,KAAM,GACNC,YAAY,GCDCC,cAAgB,CAE7BC,SDaa,WAAuC,IAJ7BC,EAPJC,EAWG/B,EAA8BgC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBP,EAAcU,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQC,EAAOC,MACb,KAAKb,EACH,OAAOlC,OAAAgD,EAAA,EAAAhD,CAAA,GACFW,EADL,CAEE2B,YAhBaI,EAgBYI,EAAOJ,UAflCA,GAgBEL,KAAMS,EAAOJ,UAEjB,KAAKP,EACH,OAAOnC,OAAAgD,EAAA,EAAAhD,CAAA,GACFW,EADL,CAEEsC,eAfiBR,EAeeK,EAAOJ,QAdtCD,EAAcQ,iBAiBnB,QACE,OAAOtC,ME7BPyB,EAAe,GACfc,EAAa,CAACC,KAIdC,EACJC,OAAOC,8BAAgCD,OAAOC,+BAoBjCC,EAlBXF,OAAOG,UAAUC,UAAUC,SAAS,WAAaN,EAC3CO,YACNC,EACAxB,EACAyB,YACEC,IAAeC,WAAf,EAAmBb,GACnBG,OAAOC,8BACLD,OAAOC,iCAILK,YACNC,EACAxB,EACAyB,YAAQC,IAAeC,WAAf,EAAmBb,cCXzBc,cACJ,SAAAA,EAAYlE,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8D,IACjBjE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgE,GAAA3D,KAAAH,KAAMJ,KAYRmE,oBAAsB,SAAAC,GACpBnE,EAAKQ,SAAS,CAAE4D,SAAUD,EAAME,iBAdfrE,EAiBnBsE,qBAAuB,SAAAC,GACrBvE,EAAKQ,SAAS,CAAE4D,SAAU,QAlBTpE,EAqBnBU,oBAAsB,SAAAC,GACpBX,EAAKD,MAAMyE,cAAc7D,IAtBRX,EAyBnByE,yBAA2B,SAAAN,GACzBnE,EAAKQ,SAAS,CAAEgE,cAAeL,EAAME,iBA1BpBrE,EA6BnB0E,yBAA2B,SAAAP,GACzBnE,EAAKQ,SAAS,CAAEmE,cAAeR,EAAME,iBA9BpBrE,EAiCnB4E,yBAA2B,WACzB5E,EAAKsE,qBAAqB,MAC1BtE,EAAKQ,SAAS,CAAEmE,cAAe,QAnCd3E,EAsCnB6E,kBAAoB,SAAAC,GAClB9E,EAAKQ,SAAS,CAAEG,QAASmE,KAvCR9E,EA0CnB+E,gBAAkB,SAAAC,GAChBxB,EAAMyB,SAAS,CACbjC,KAAMZ,EACNO,QAAS,CAAEO,cAAe8B,KAE5B,IAAME,EAAkBF,EACxBG,aAAaC,QAAQ,gBAAiBF,IAhDrB,IAGTvE,EAAYX,EAAKD,MAAjBY,QAHS,OAKjBX,EAAKY,MAAQ,CACXwD,SAAU,KACVI,cAAe,KACfG,cAAe,KACfhE,QAASA,GATMX,wEAqDV,IAAAqF,EAAAlF,KACCQ,EAAYR,KAAKJ,MAAjBY,QADD2E,EAG6BnF,KAAKS,MAAjCwD,EAHDkB,EAGClB,SAAUI,EAHXc,EAGWd,cAEZe,EAAWC,QAAQpB,GACnBqB,EAAaD,QAAQhB,GAC3B,OACE3D,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,0BACb7E,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CAAMc,QAAS,kBAAMyD,EAAKN,gBAAgBpE,EAAQqE,qBAChDnE,EAAAC,EAAAC,cAAC6E,EAAA9E,EAAD,CACEiC,OACElC,EAAAC,EAAAC,cAAC8E,EAAA,SAAD,KACEhF,EAAAC,EAAAC,cAAC+E,EAAAhF,EAAD,CACEiF,aAAW,OACXC,YAAWT,EAAW,iBAAczC,EACpCmD,gBAAc,OACdrE,QAASzB,KAAK+D,qBAEdrD,EAAAC,EAAAC,cAACmF,EAAApF,EAAD,OAEFD,EAAAC,EAAAC,cAACoF,EAAArF,EAAD,CACEQ,GAAG,YACH8C,SAAUA,EACVnD,KAAMsE,EACNrE,QAASf,KAAKmE,sBAkBdzD,EAAAC,EAAAC,cAACqF,EAAAtF,EAAD,CAAUuF,IAAI,cACZxF,EAAAC,EAAAC,cAAA,QAAMa,QAASzB,KAAKsE,0BAApB,kBAICgB,GACC5E,EAAAC,EAAAC,cAACuF,EAAD,CACE3F,QAASA,EACTD,oBAAqBP,KAAKO,yBAOtC6F,MACE1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAE,cAAAC,OAAgB/F,EAAQqE,oBAC7BrE,EAAQc,aAGbkF,UAAW,YAAchG,EAAQiG,qBArHnB5E,aA4HXC,uBA9HA,SAAAC,GAAK,MAAK,IA8HVD,CAAmBgC,qBC3Ib4C,GACnB,SAAAA,IAME,IALAvF,EAKAsB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GALK,GACLnB,EAIAmB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAJc,GACdoC,EAGApC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAHoB,GACpBkE,EAEAlE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFc,GACdgE,EACAhE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADY,GACZ3C,OAAAC,EAAA,EAAAD,CAAAE,KAAA0G,GACA1G,KAAKmB,GAAKA,EACVnB,KAAKsB,YAAcA,EACnBtB,KAAK6E,kBAAoBA,EACzB7E,KAAK2G,YAAcA,EACnB3G,KAAKyG,UAAYA,4FCaN3E,4BAnBA,SAAAC,GAAK,MAAK,CACvB6E,OAAQ,CACNC,SAAU,WACVC,gBAAiB,aAgBNhF,CAbf,SAAsBlC,GAAO,IACnBmH,EAAYnH,EAAZmH,QACR,OACErG,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,CAAQ4E,UAAWwB,EAAQH,QACzBlG,EAAAC,EAAAC,cAACqG,GAAAtG,EAAD,KACED,EAAAC,EAAAC,cAACsG,GAAAvG,EAAD,CAAYwG,QAAQ,KAAKzF,MAAM,WAC5B9B,EAAMiD,KADT,gBCCFuE,eACJ,SAAAA,EAAYxH,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoH,IACjBvH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsH,GAAAjH,KAAAH,KAAMJ,KAQRyH,aAAe,SAAArD,GACb,IAAMsD,EAAYxH,OAAAgD,EAAA,EAAAhD,CAAA,GAAQD,EAAKY,MAAMD,SACrC8G,EAAatD,EAAMuD,OAAOC,MAAQxD,EAAMuD,OAAOE,MAC/C5H,EAAKQ,SAAS,CACZG,QAAS8G,KAbMzH,EAiBnB6H,aAAe,SAAA1D,GACbA,EAAM2D,iBACN,IAAMhD,EAAc,IAAI+B,GAFFkB,EAG0B/H,EAAKY,MAAMD,QAAnDc,EAHcsG,EAGdtG,YAAaqF,EAHCiB,EAGDjB,YAAaF,EAHZmB,EAGYnB,UAClC,GAAwB,WAApB5G,EAAKD,MAAMiD,KACb8B,EAAYrD,YAAcA,EAC1BqD,EAAYgC,YAAcA,EAC1BhC,EAAY8B,UAAYA,EACxB9B,EAAYE,kBAAoBhF,EAAKgI,mBAAmBvG,GACxDzB,EAAKiI,eAAenD,OACf,KAAAoD,EAODlI,EAAKD,MAAM+E,YALbxD,EAFG4G,EAEH5G,GACA0D,EAHGkD,EAGHlD,kBACAvD,EAJGyG,EAIHzG,YACAqF,EALGoB,EAKHpB,YACAF,EANGsB,EAMHtB,UAEF9B,EAAYxD,GAAKA,EACjBwD,EAAYE,kBAAoBA,EAChCF,EAAYrD,YAAezB,EAAKY,MAAMD,QAAQc,YAE1CzB,EAAKY,MAAMD,QAAQc,YADnBA,EAEJqD,EAAYgC,YAAe9G,EAAKY,MAAMD,QAAQmG,YAE1C9G,EAAKY,MAAMD,QAAQmG,YADnBA,EAEJhC,EAAY8B,UAAa5G,EAAKY,MAAMD,QAAQiG,UAExC5G,EAAKY,MAAMD,QAAQiG,UADnBA,EAEJ5G,EAAKmI,yBAAyBrD,KA5ChC9E,EAAKY,MAAQ,CACXwH,gBAAgB,EAChBzH,QAAS,IAAIkG,GACbwB,OAAQ,IALOrI,kFAkDAyB,GAGjB,OAFoBA,EAAY6G,MAAM,KACIC,KAAK,KAClBC,+DAGN1D,GAAa,IAAAO,EAAAlF,KACpCsI,KACGC,MAAM,eAAgB5D,GACtB6D,KAAK,SAAAC,GACJvD,EAAKtF,MAAM8E,kBAAkB+D,EAAKC,MAClCxD,EAAKtF,MAAMmB,YAEZ4H,MAAM,SAAAF,GACLvD,EAAK7E,SAAS,CACZ6H,OAAQ,CACN5G,YAAamH,EAAKG,SAASF,KAAKpH,YAChCqF,YAAa8B,EAAKG,SAASF,KAAK/B,wDAO3BhC,GAAa,IAAAkE,EAAA7I,KAC1BsI,KACGQ,KAAK,eAAgBnE,GACrB6D,KAAK,SAAAC,GACJI,EAAKjJ,MAAMmJ,kBAAX,GAAAxC,OAAAzG,OAAAkJ,GAAA,EAAAlJ,CAAiC+I,EAAKjJ,MAAMqJ,aAA5C,CAAyDR,EAAKC,UAE/DF,KAAK,WACJK,EAAKjJ,MAAMmB,YAEZ4H,MAAM,SAAAF,GAAQ,IAAAS,EACwBT,EAAKG,SAASF,KAA3C/B,EADKuC,EACLvC,YAAarF,EADR4H,EACQ5H,YACrBuH,EAAKxI,SAAS,CACZ6H,OAAQ,CACN5G,YAAaA,EACbqF,YAAaA,wCAOd,IAAAwC,EAC0BnJ,KAAKJ,MAA9BmH,EADDoC,EACCpC,QAASpC,EADVwE,EACUxE,YACTuD,EAAWlI,KAAKS,MAAhByH,OAER,OACExH,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,KAAMd,KAAKS,MAAMwH,eACjBlH,QAASf,KAAKJ,MAAMmB,QACpBC,kBAAgB,oBAChBoI,OAAO,QACPC,WAAW,EACXC,SAAU,MAEV5I,EAAAC,EAAAC,cAAC2I,GAAD,CAAc1G,KAAM7C,KAAKJ,MAAMiD,OAC/BnC,EAAAC,EAAAC,cAAA,QAAM4I,SAAUxJ,KAAK0H,cACnBhH,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACED,EAAAC,EAAAC,cAAC6I,GAAA9I,EAAD,CACEiB,WAAS,EACT8H,OAAO,QACPvI,GAAG,OACHqG,KAAK,cACLmC,MAAM,eACN9G,KAAK,OACLwG,WAAS,EACTO,SAAU5J,KAAKqH,aACfwC,kBACkBlH,IAAhBgC,EAA4B,GAAKA,EAAYrD,cAGhD4G,EAAO5G,aACNZ,EAAAC,EAAAC,cAAA,QAAM2E,UAAWwB,EAAQ+C,OAAQ5B,EAAO5G,aAGxCZ,EAAAC,EAAAC,cAAC6I,GAAA9I,EAAD,CACEQ,GAAG,4BACHqG,KAAK,cACLmC,MAAM,sBACNI,WAAS,EACTC,KAAK,IACLN,OAAO,SACPL,WAAS,EACTO,SAAU5J,KAAKqH,aACfwC,kBACkBlH,IAAhBgC,EAA4B,GAAKA,EAAYgC,cAIlDuB,EAAOvB,aACNjG,EAAAC,EAAAC,cAAA,QAAM2E,UAAWwB,EAAQ+C,OAAQ5B,EAAOvB,cAG5CjG,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,KACED,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAQc,QAASzB,KAAKJ,MAAMmB,QAASW,MAAM,WAA3C,UAGAhB,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAQe,MAAM,UAAUmB,KAAK,UAC1B7C,KAAKJ,MAAMiD,gBAxJEhB,aAgKbC,wBAvKA,SAAAC,GAAK,MAAK,CACvB+H,MAAO,CACLpI,MAAO,MACPuI,SAAU,MAoKCnI,CAAmBsF,IC9J5B8C,eACJ,SAAAA,EAAYtK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkK,IACjBrK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoK,GAAA/J,KAAAH,KAAMJ,KAORuK,4BAA8B,WAC5BtK,EAAKQ,SAAS,CAAE+J,uBAAuB,KATtBvK,EAYnBwK,YAAc,WACZxK,EAAKQ,SAAS,CACZ+J,uBAAuB,EACvBlC,OAAQ,GACR1H,QAAS,IAAIkG,MAhBE7G,EA4BnByK,oBAAsB,SAAA9J,GACpB,IAAM+J,EAAkB1K,EAAKY,MAAMwI,YAC3BpE,EAAsBrE,EAAtBqE,kBAERyD,KAAMkC,OAAN,gBAAAjE,OAA6B1B,IAAqB2D,KAAK,WACrD,IAAIiC,EAAmBF,EAAgBG,OACrC,SAAAC,GAAI,OAAIA,EAAK9F,oBAAsBA,IAErChF,EAAKQ,SAAS,CAAE4I,YAAawB,OApCd5K,EAwCnBkJ,kBAAoB,SAAAtI,GAClBZ,EAAKQ,SAAS,CAAE4I,YAAaxI,KAvC7BZ,EAAKY,MAAQ,CACXwI,YAAa,GACbzI,QAAS,IAAIkG,GACb0D,uBAAuB,GALRvK,mFAoBC,IAAAqF,EAAAlF,KAClBsI,KAAMsC,IAAI,gBAAgBpC,KAAK,SAAAC,GAC7BvD,EAAK7E,SAAS,CACZ4I,YAAaR,EAAKC,0CAqBf,IAAAG,EAAA7I,KACC+G,EAAY/G,KAAKJ,MAAjBmH,QACFkC,EAAcjJ,KAAKS,MAAMwI,YAC/B,OACEvI,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,YACb7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,aACb7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,OACb7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,aACb7E,EAAAC,EAAAC,cAAA,MAAI2E,UAAU,yBAAd,gBACA7E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACEwG,QAAQ,YACRzF,MAAM,YACND,QAASzB,KAAKmK,4BACd5E,UAAWwB,EAAQ8D,aACnBC,eAAa,GALf,sBASC9K,KAAKS,MAAM2J,uBACV1J,EAAAC,EAAAC,cAACmK,GAAD,CACElI,KAAK,SACL9B,QAASf,KAAKqK,YACdpB,YAAajJ,KAAKS,MAAMwI,YACxBF,kBAAmB/I,KAAK+I,oBAG5BrI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAAS2E,UAAU,8BACjB7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,aACb7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,OACZ0D,EAAY+B,IAAI,SAAAxK,GAAO,OACtBE,EAAAC,EAAAC,cAACqK,EAAD,CACE/E,IAAK1F,EAAQW,GACbX,QAASA,EACT6D,cAAewE,EAAKyB,sCAjFpBzI,aA+FTC,wBA3GA,SAAAC,GAAK,MAAK,CACvB8I,aAAc,CACZK,WAAY,mDACZC,OAAQ,EACRC,aAAc,EACdC,UAAW,wCACX3J,MAAO,QACP4J,OAAQ,GACRC,QAAS,YAmGEzJ,CAAmBoI,ICjHrBsB,GAAS,SAAAC,GAChBA,EACFnD,KAAMoD,SAASC,QAAQC,OAAvB,cAAiDH,SAE1CnD,KAAMoD,SAASC,QAAQC,OAAvB,eC2BLC,8MACJC,WAAa,SAAA9H,GACXgB,aAAa+G,WAAW,OACxB/G,aAAa+G,WAAW,iBACxBP,IAAO,GACPnI,EAAMyB,SAAS,CACbjC,KAAMb,EACNQ,QAAS,KAEXW,OAAO6I,SAASC,KAAO,6EAEhB,IAAA/G,EAAAlF,KAAAkM,EACsB7I,EAAM8I,WAAW7J,SAAtCF,EADD8J,EACC9J,WAAYD,EADb+J,EACa/J,KACZ4E,EAAY/G,KAAKJ,MAAjBmH,QACR,OACErG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,CAAQkG,SAAS,SAAStB,UAAWwB,EAAQqF,QAC3C1L,EAAAC,EAAAC,cAACqG,GAAAtG,EAAD,KACED,EAAAC,EAAAC,cAACsG,GAAAvG,EAAD,CAAYwG,QAAQ,KAAK5B,UAAWwB,EAAQsF,MAC1C3L,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,IAAIf,UAAWwB,EAAQuF,YAAhC,aAIDlK,GAA8C,IAAhCtC,OAAOyM,QAAQpK,GAAMO,QAClChC,EAAAC,EAAAC,cAAC8E,EAAA,SAAD,KACEhF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,aAAaf,UAAWwB,EAAQuF,YACvC5L,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACEwG,QAAQ,OACR2D,eAAa,EACbvF,UAAWwB,EAAQuF,YAElBnK,EAAKqK,UALR,iBAQF9L,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,IAAIf,UAAWwB,EAAQuF,YAC9B5L,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACEwG,QAAQ,OACR2D,eAAa,EACbvF,UAAWwB,EAAQuF,WACnB7K,QAAS,kBAAMyD,EAAK4G,eAJtB,YAW2B,IAAhChM,OAAOyM,QAAQpK,GAAMO,QACpBhC,EAAAC,EAAAC,cAAC8E,EAAA,SAAD,KACEhF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,SAASf,UAAWwB,EAAQuF,YACnC5L,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACEwG,QAAQ,OACR2D,eAAa,EACbvF,UAAWwB,EAAQuF,YAHrB,UAQF5L,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,YAAYf,UAAWwB,EAAQuF,YACtC5L,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACEwG,QAAQ,OACR2D,eAAa,EACbvF,UAAWwB,EAAQuF,YAHrB,wBA1DGzK,aA0ENC,wBA9FA,SAAAC,GAAK,MAAK,CACvBqK,OAAQ,CACNlB,WAAY,8CACZC,OAAQ,EACRzJ,MAAO,QACP6J,QAAS,SACTF,UAAW,QAEbiB,WAAY,CACV5K,MAAO,OACP+K,UAAW,CACT/K,MAAO,OACPgL,eAAgB,SAGpBL,KAAM,CACJM,SAAU,EACVjL,MAAO,UA6EII,CAAmB+J,oICnF5Be,eACJ,SAAAA,EAAYhN,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4M,IACjB/M,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8M,GAAAzM,KAAAH,KAAMJ,KAaRiN,iBAAmB,WACjBhN,EAAKQ,SAAS,CACZyM,cAAejN,EAAKY,MAAMqM,aAC1BC,kBAAmBlN,EAAKY,MAAMsM,oBAjBflN,EAqBnBmN,8BAAgC,WAC9BnN,EAAKQ,SAAS,CACZ4M,mBAAoBpN,EAAKY,MAAMwM,kBAC/BC,gBAAiBrN,EAAKY,MAAMyM,kBAxBbrN,EA4BnBsN,2BAA6B,WAC3BtN,EAAKQ,SAAS,CACZ+M,kBAAmBvN,EAAKY,MAAM2M,oBA9BfvN,EAkCnBwH,aAAe,SAAArD,GACbnE,EAAKQ,SAALP,OAAAuN,GAAA,EAAAvN,CAAA,GACGkE,EAAMuD,OAAOC,KAAOxD,EAAMuD,OAAOE,SApCnB5H,EAwCnB6H,aAAe,SAAA1D,GACbA,EAAM2D,iBACN,IAAM2F,EAAgB,CACpBnM,GAAItB,EAAKD,MAAM2N,OAAOpM,GACtBqM,QAAS3N,EAAKY,MAAM+M,QACpBC,mBAAoB5N,EAAKY,MAAMgN,mBAC/BC,WAAY7N,EAAKY,MAAMiN,WACvBC,SAAU9N,EAAKD,MAAM2N,OAAOI,UAE9B9N,EAAKD,MAAMgO,mBAAmBN,IA/C9BzN,EAAKY,MAAQ,CACXsM,kBAAkB,EAClBD,cAAc,EACdG,mBAAmB,EACnBC,gBAAgB,EAChBE,kBAAkB,EAClBI,QAAS3N,EAAKD,MAAM2N,OAAOC,SAAW,GACtCC,mBAAoB5N,EAAKD,MAAM2N,OAAOE,oBAAsB,GAC5DC,WAAY7N,EAAKD,MAAM2N,OAAOG,YAAc,GAC5CC,SAAU9N,EAAKD,MAAM2N,OAAOI,UAAY,IAXzB9N,wEA2DV,IAAAsJ,EACqBnJ,KAAKJ,MAAzBmH,EADDoC,EACCpC,QAASwG,EADVpE,EACUoE,OACjB,OACE7M,EAAAC,EAAAC,cAAC8E,EAAA,SAAD,KACEhF,EAAAC,EAAAC,cAAA,QAAMa,QAASzB,KAAKgN,+BACjBO,EAAOM,iBAEVnN,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,KAAMd,KAAKS,MAAMwM,kBACjBlM,QAASf,KAAKgN,8BACdhM,kBAAgB,oBAChBqI,WAAS,EACTC,SAAS,MAET5I,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,CAAQ4E,UAAWwB,EAAQH,QACzBlG,EAAAC,EAAAC,cAACqG,GAAAtG,EAAD,KACED,EAAAC,EAAAC,cAACsG,GAAAvG,EAAD,CAAYwG,QAAQ,KAAKzF,MAAM,UAAU6D,UAAWwB,EAAQ+G,MACzDP,EAAO1I,kBADV,MACgC0I,EAAOM,iBAEvCnN,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAQe,MAAM,UAAUD,QAASzB,KAAK6M,kBAAtC,iBAKJnM,EAAAC,EAAAC,cAAA,QAAM4I,SAAUxJ,KAAK0H,cACnBhH,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACED,EAAAC,EAAAC,cAAC6I,GAAA9I,EAAD,CACEiB,WAAS,EACT8H,OAAO,QACPvI,GAAG,OACHqG,KAAK,UACLmC,MAAM,iBACN9G,KAAK,OACLwG,WAAS,EACTO,SAAU5J,KAAKqH,aACfwC,aAAc0D,EAAOC,QACrBrG,QAAQ,WACR4G,WAAY,CACVC,SAAUhO,KAAKS,MAAMqM,gBAGzBpM,EAAAC,EAAAC,cAAC6I,GAAA9I,EAAD,CACE+I,OAAO,QACPvI,GAAG,4BACHqG,KAAK,qBACLmC,MAAM,sBACNI,WAAS,EACTC,KAAK,IAELX,WAAS,EACTO,SAAU5J,KAAKqH,aACfwC,aAAc0D,EAAOE,mBACrBtG,QAAQ,WACR4G,WAAY,CACVC,SAAUhO,KAAKS,MAAMqM,gBAGzBpM,EAAAC,EAAAC,cAAC6I,GAAA9I,EAAD,CACE+I,OAAO,QACPvI,GAAG,aACHqG,KAAK,aACLmC,MAAM,oBACN9G,KAAK,SACLwG,WAAS,EACTO,SAAU5J,KAAKqH,aACfwC,aAAc0D,EAAOG,WACrBvG,QAAQ,WACR4G,WAAY,CACVC,SAAUhO,KAAKS,MAAMqM,iBAI3BpM,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,KACED,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACEc,QAASzB,KAAKgN,8BACdtL,MAAM,WAFR,SAMAhB,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACEc,QAASzB,KAAKgN,8BACdtL,MAAM,UACNuM,SAAUjO,KAAKS,MAAMsM,iBACrBlK,KAAK,UAJP,2BA3IahB,aA2JZC,wBAxKA,SAAAC,GAAK,MAAK,CACvB6E,OAAQ,CACNC,SAAU,WACVC,gBAAiB,WAEnBgH,KAAM,CACJA,KAAM,GAERI,UAAW,CACTC,WAAYpM,EAAMqM,QAAQC,KAC1BC,YAAavM,EAAMqM,QAAQC,QA8JhBvM,CAAmB8K,yBClK5B2B,eACJ,SAAAA,EAAY3O,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuO,IACjB1O,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyO,GAAApO,KAAAH,KAAMJ,KAMR4O,6BAA+B,SAAAxK,GAC7BA,EAAMyK,kBACN5O,EAAKQ,SAAS,CAAEqO,6BAA6B,KAT5B7O,EAYnB8O,8BAAgC,WAC9B9O,EAAKQ,SAAS,CAAEqO,6BAA6B,KAb5B7O,EAgBnB+O,mBAAqB,SAAArB,GACnB1N,EAAK8O,gCACLpB,EAAOsB,SAAWhP,EAAKD,MAAMkP,WAC7BjP,EAAKD,MAAMmP,aAAaxB,IAjBxB1N,EAAKY,MAAQ,CACXiO,6BAA6B,GAHd7O,wEAqBV,IAAAsJ,EACqBnJ,KAAKJ,MAAzBmH,EADDoC,EACCpC,QAASwG,EADVpE,EACUoE,OACjB,OACE7M,EAAAC,EAAAC,cAAC8E,EAAA,SAAD,KACEhF,EAAAC,EAAAC,cAAC+E,EAAAhF,EAAD,CACEiF,aAAW,SACXoJ,KAAK,QACLlE,eAAa,EACbrJ,QAASzB,KAAKwO,8BAEd9N,EAAAC,EAAAC,cAACqO,GAAAtO,EAAD,CAAWqO,KAAK,QAAQzJ,UAAWwB,EAAQmI,aAE7CxO,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,KAAMd,KAAKS,MAAMiO,4BACjB3N,QAASf,KAAK2O,8BACd3N,kBAAgB,qBAChBC,mBAAiB,4BAEjBP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAaQ,GAAG,sBAAsB,kBACtCT,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACED,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAmBQ,GAAG,4BAAtB,mCACmC,IACjCT,EAAAC,EAAAC,cAAA,SAAIZ,KAAKJ,MAAM2N,OAAOM,iBAFxB,MAKFnN,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,KACED,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACEc,QAASzB,KAAK2O,8BACdjN,MAAM,WAFR,MAMAhB,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACEc,QAASzB,KAAK4O,mBAAmBjN,KAAK3B,KAAMuN,GAC5C7L,MAAM,WAFR,iBAtDeG,aAkEZC,wBAxEA,SAAAC,GAAK,MAAK,CACvBmN,UAAW,CACTjF,SAAU,MAsECnI,CAAmByM,ICpD5BY,eACJ,SAAAA,EAAYvP,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmP,IACjBtP,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqP,GAAAhP,KAAAH,KAAMJ,KAYRyH,aAAe,SAAArD,GACbnE,EAAKQ,SAALP,OAAAuN,GAAA,EAAAvN,CAAA,GACGkE,EAAMuD,OAAOC,KAAOxD,EAAMuD,OAAOE,SAfnB5H,EAkBnBuP,aAAe,SAAA7B,GACbA,EAAOsB,SAAWhP,EAAKD,MAAMkP,WAC7BjP,EAAKD,MAAMmP,aAAaxB,IApBP1N,EAuBnBwP,gBAAkB,SAAArL,GAChBA,EAAMyK,kBACN5O,EAAKQ,SAAS,CAAES,MAAM,KAzBLjB,EA4BnBwK,YAAc,WACZxK,EAAKQ,SAAS,CAAES,MAAM,KA7BLjB,EAgCnBgN,iBAAmB,WACjBhN,EAAKQ,SAAS,CACZyM,cAAejN,EAAKY,MAAMqM,aAC1BC,kBAAmBlN,EAAKY,MAAMsM,oBAnCflN,EAuCnByP,aAAe,WAAM,IACX/B,EAAW1N,EAAKD,MAAhB2N,OAER,OACE7M,EAAAC,EAAAC,cAAC2O,GAAD,CACEhC,OAAQA,EACRwB,aAAclP,EAAKuP,aAAazN,KAAlB7B,OAAA0P,GAAA,EAAA1P,QAAA0P,GAAA,EAAA1P,CAAAD,IAA6B0N,MA7C9B1N,EAkDnBwH,aAAe,SAAArD,GACbnE,EAAKQ,SAALP,OAAAuN,GAAA,EAAAvN,CAAA,GACGkE,EAAMuD,OAAOC,KAAOxD,EAAMuD,OAAOE,SApDnB5H,EAwDnB+N,mBAAqB,SAAAL,GACnBA,EAAM,qBAA2B1N,EAAKD,MAAM2N,OAAOkC,qBACnDnH,KAAMC,MAAN,cAAAhC,OACgB1G,EAAKD,MAAMiF,kBAD3B,KAAA0B,OACgD1G,EAAKD,MAAMkP,WAD3D,KAAAvI,OAEIgH,EAAOpM,IAEToM,IA9De1N,EAkEnB6P,yBAA2B,SAAAnC,GACzB,OACE7M,EAAAC,EAAAC,cAAC+O,GAAD,CACEpC,OAAQA,EACRK,mBAAoB/N,EAAK+N,sBAtEZ,IAETL,EAAW1N,EAAKD,MAAhB2N,OAFS,OAGjB1N,EAAKY,MAAQ,CACXK,MAAM,EACN8O,YAAY,EACZpC,QAASD,EAAOC,QAChBC,mBAAoBF,EAAOE,mBAC3BC,WAAYH,EAAOG,WACnBC,SAAUJ,EAAOI,SACjBkC,WAAYhQ,EAAKD,MAAMkP,YAVRjP,wEA2EV,IAAAqF,EAAAlF,KAAAmJ,EACqBnJ,KAAKJ,MAAzB2N,EADDpE,EACCoE,OAAQxG,EADToC,EACSpC,QACV+I,EAAgBvC,EAAOI,SAC7B,OACEjN,EAAAC,EAAAC,cAACmP,GAAA,EAAD,CACEC,MAAOhQ,KAAKJ,MAAMoQ,MAClBC,YAAajQ,KAAKJ,MAAM2N,OAAOM,gBAC/BX,eAAgBlN,KAAKS,MAAMyM,gBAE1B,SAACgD,EAAUC,GAAX,OACCzP,EAAAC,EAAAC,cAAA,MAAAd,OAAAsQ,OAAA,GACMF,EAASG,eACTH,EAASI,gBAFf,CAGEC,IAAKL,EAASM,UACVN,EAASO,gBAEb/P,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CACE4E,UAAWmL,KACT3J,EAAQ4J,MADW7Q,OAAAuN,GAAA,EAAAvN,CAAA,GAEhBiH,EAAQ6J,KAAyB,SAAlBd,GAFChQ,OAAAuN,GAAA,EAAAvN,CAAA,GAGhBiH,EAAQ8J,OAA2B,WAAlBf,GAHDhQ,OAAAuN,GAAA,EAAAvN,CAAA,GAIhBiH,EAAQ+J,IAAwB,QAAlBhB,IAEnBiB,MAAO,CACLjK,gBAAiBqJ,EAASa,WAAa,UAAY,OAGrDtQ,EAAAC,EAAAC,cAAC6E,EAAA9E,EAAD,CACEyF,MAAOlB,EAAKwK,yBAAyBnC,GACrC/G,UAAWtB,EAAKtF,MAAM2N,OAAOC,QAC7B5K,OAAQsC,EAAKoK,4BA1GRzN,aAmHNC,wBAvIA,SAAAC,GAAK,MAAK,CACvB4O,MAAO,CACLM,UAAW,EACXC,aAAc,EACd9F,aAAc,GAEhBwF,KAAM,CACJO,WAAY,iBAEdN,OAAQ,CACNM,WAAY,qBAEdL,IAAK,CACHK,WAAY,qBAEdjC,UAAW,CACTjF,SAAU,MAuHCnI,CAAmBqN,IC/IbiC,+LACCC,GAClB,OAAIA,EAAUC,UAAYtR,KAAKJ,MAAM0R,yCAK9B,IAAAzR,EAAAG,KAEP,OAAOA,KAAKJ,MAAM0R,QAAQtG,IAAI,SAACuC,EAAQyC,GAAT,OAC5BtP,EAAAC,EAAAC,cAAC2Q,GAAD,CACErL,IAAK8J,EACLzC,OAAQA,EACRyC,MAAOA,EACPjB,aAAclP,EAAKD,MAAMmP,aACzBD,WAAYjP,EAAKD,MAAMkP,WACvBzH,aAAcxH,EAAKD,MAAMgK,SACzB/E,kBAAmBhF,EAAKD,MAAMiF,6BAjBChD,4ECwBjC2P,eACJ,SAAAA,EAAY5R,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwR,IACjB3R,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0R,GAAArR,KAAAH,KAAMJ,KAaR6R,yBAA2B,WACzB5R,EAAKQ,SAAS,CACZqR,4BAA6B7R,EAAKY,MAAMiR,8BAhBzB7R,EAoBnBwH,aAAe,SAAArD,GACbnE,EAAKQ,SAALP,OAAAuN,GAAA,EAAAvN,CAAA,GACGkE,EAAMuD,OAAOC,KAAOxD,EAAMuD,OAAOE,SAtBnB5H,EA0BnB8R,uBAAyB,WACvB9R,EAAKQ,SAAS,CAAE+M,kBAAmBvN,EAAKY,MAAMmR,gBA3B7B/R,EA8BnBgS,mBAAqB,WACnBhS,EAAKQ,SAAS,CAAE+M,kBAAkB,KA/BjBvN,EAkCnBiS,oBAAsB,WACpBjS,EAAKQ,SAAS,CAAE+M,kBAAkB,KAnCjBvN,EAsCnB6H,aAAe,SAAA1D,GACbA,EAAM2D,iBACN,IAAMoK,EAAY,CAChBvE,QAAS3N,EAAKY,MAAM+M,QACpBC,mBAAoB5N,EAAKY,MAAMgN,mBAC/B5I,kBAAmBhF,EAAKY,MAAMoE,kBAC9B8I,SAAU9N,EAAKY,MAAMkN,SACrBkB,SAAUhP,EAAKD,MAAMiP,SACrBnB,WAAY7N,EAAKY,MAAMiN,YAEzB7N,EAAKD,MAAMoS,cAAcD,IA9CzBlS,EAAKY,MAAQ,CACXiR,2BAA4B7R,EAAKD,MAAMqS,SACvCzE,QAAS,GACTC,mBAAoB,GACpB5I,kBAAmBhF,EAAKD,MAAMiF,kBAC9B8I,SAAU,GACVD,WAAY,GACZN,kBAAkB,EAClB8E,SAAUrS,EAAKD,MAAMiP,UAVNhP,wEAmDV,IACCkH,EAAY/G,KAAKJ,MAAjBmH,QACR,OACErG,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,KAAMd,KAAKS,MAAMiR,2BACjB3Q,QAASf,KAAKyR,0BAEd/Q,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,CAAQ4E,UAAWwB,EAAQH,QACzBlG,EAAAC,EAAAC,cAACqG,GAAAtG,EAAD,KACED,EAAAC,EAAAC,cAACsG,GAAAvG,EAAD,CAAYwG,QAAQ,KAAKzF,MAAM,UAAU6D,UAAWwB,EAAQ+G,MAA5D,uBAKJpN,EAAAC,EAAAC,cAAA,QAAM4I,SAAUxJ,KAAK0H,cACnBhH,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACED,EAAAC,EAAAC,cAAC6I,GAAA9I,EAAD,CACEiB,WAAS,EACT8H,OAAO,QACPvI,GAAG,OACHqG,KAAK,UACLmC,MAAM,UACN9G,KAAK,OACLwG,WAAS,EACTO,SAAU5J,KAAKqH,eAEjB3G,EAAAC,EAAAC,cAAC6I,GAAA9I,EAAD,CACEQ,GAAG,4BACHqG,KAAK,qBACLmC,MAAM,sBACNI,WAAS,EACTC,KAAK,IACLN,OAAO,SACPL,WAAS,EACTO,SAAU5J,KAAKqH,eAEjB3G,EAAAC,EAAAC,cAAC6I,GAAA9I,EAAD,CACE+I,OAAO,QACPvI,GAAG,aACHqG,KAAK,aACLmC,MAAM,wBACN9G,KAAK,SACLwG,WAAS,EACTO,SAAU5J,KAAKqH,eAEjB3G,EAAAC,EAAAC,cAACuR,GAAAxR,EAAD,CAAa0I,WAAS,GACpB3I,EAAAC,EAAAC,cAACwR,GAAAzR,EAAD,CAAY0R,QAAQ,+BAApB,uBAGA3R,EAAAC,EAAAC,cAAC0R,GAAA3R,EAAD,CACEG,KAAMd,KAAKS,MAAM2M,iBACjBrM,QAASf,KAAK8R,oBACdS,OAAQvS,KAAK6R,mBACbpK,MAAOzH,KAAKS,MAAMkN,SAClB/D,SAAU5J,KAAKqH,aACfmL,WAAY,CACVhL,KAAM,WACNrG,GAAI,gCAGNT,EAAAC,EAAAC,cAACqF,EAAAtF,EAAD,CAAU8G,MAAO,OAAjB,OACA/G,EAAAC,EAAAC,cAACqF,EAAAtF,EAAD,CAAU8G,MAAO,UAAjB,UACA/G,EAAAC,EAAAC,cAACqF,EAAAtF,EAAD,CAAU8G,MAAO,QAAjB,WAIN/G,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,KACED,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAQc,QAASzB,KAAKyR,yBAA0B/P,MAAM,WAAtD,UAGAhB,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACEc,QAASzB,KAAKyR,yBACd/P,MAAM,UACNmB,KAAK,UAHP,oBA1HehB,aAwIZC,wBArJA,SAAAC,GAAK,MAAK,CACvB6E,OAAQ,CACNC,SAAU,WACVC,gBAAiB,WAEnBgH,KAAM,CACJA,KAAM,GAERI,UAAW,CACTC,WAAYpM,EAAMqM,QAAQC,KAC1BC,YAAavM,EAAMqM,QAAQC,QA2IhBvM,CAAmB0P,+FC3JlC,IAAMiB,GAAWC,KAAOC,IAAVC,MASRC,eACJ,SAAAA,EAAYjT,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6S,IACjBhT,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+S,GAAA1S,KAAAH,KAAMJ,KAORkT,2BAA6B,WAC3BjT,EAAKQ,SAAS,CAAE0S,sBAAuBlT,EAAKY,MAAMsS,wBATjClT,EAYnBwH,aAAe,SAAArD,GACbnE,EAAKQ,SAALP,OAAAuN,GAAA,EAAAvN,CAAA,GACGkE,EAAMuD,OAAOC,KAAOxD,EAAMuD,OAAOE,SAdnB5H,EAkBnB6H,aAAe,SAAA6F,GACb1N,EAAKD,MAAMoT,oBAAoBzF,IAnBd1N,EAsBnBoT,0BAA4B,SAAAjP,GAE1BnE,EAAKQ,SAAS,CACZ6S,2BAA4BrT,EAAKY,MAAMyS,6BAvBzCrT,EAAKY,MAAQ,CACXsS,sBAAsB,EACtBlO,kBAAmBhF,EAAKD,MAAMiF,kBAC9BqO,2BAA2B,GALZrT,wEA4BV,IAAAqF,EAAAlF,KACP,OACEU,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,wBACb7E,EAAAC,EAAAC,cAAA,MAAI2E,UAAU,8BACXvF,KAAKJ,MAAMiP,SAASzI,MACrB1F,EAAAC,EAAAC,cAAA,QAAMmQ,MAAO,CAAE9G,SAAU,KAAzB,IAAiCjK,KAAKJ,MAAM0R,QAAQ5O,OAApD,MAoBFhC,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACE4E,UAAU,cACV9D,QAASzB,KAAK8S,2BACd9R,kBAAgB,oBAChB8J,eAAa,EACbiG,MAAO,CACLjK,gBAAiB,OACjBqE,OAAQ,oBACRC,aAAc,IARlB,gBAcA1K,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,gCACb7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,eACZvF,KAAKS,MAAMsS,sBACVrS,EAAAC,EAAAC,cAACuS,GAAD,CACElB,SAAUjS,KAAKS,MAAMsS,qBACrBf,cAAehS,KAAK0H,aACpBmH,SAAU7O,KAAKJ,MAAMiP,SAASzI,MAC9BvB,kBAAmB7E,KAAKS,MAAMoE,qBAIpCnE,EAAAC,EAAAC,cAACmP,GAAA,EAAD,CAAWqD,YAAapT,KAAKJ,MAAMiP,SAASzI,OACzC,SAAC8J,EAAUC,GAAX,OACCzP,EAAAC,EAAAC,cAAC6R,GAAD3S,OAAAsQ,OAAA,CACEG,IAAKL,EAASM,UACVN,EAASO,eAFf,CAGEM,MAAO,CACL7F,WAAYiF,EAASkD,eACjB,4CACA,KACJC,WAAY,UAGd5S,EAAAC,EAAAC,cAAC2S,GAAD,CACEjC,QAASpM,EAAKtF,MAAM0R,QACpBvC,aAAc7J,EAAKtF,MAAMmP,aACzBD,WAAY5J,EAAKtF,MAAMiP,SAASzI,MAChCvB,kBAAmBK,EAAKtF,MAAMiF,kBAC9B+E,SAAU1E,EAAKmC,eAEhB6I,EAASsD,wBAlGH3R,aA2GRC,wBAjHA,SAAAC,GAAK,MAAK,CACvBwL,OAAQ,CACNzG,gBAAiB,aA+GNhF,CAAmB+Q,IC9F5BY,eACJ,SAAAA,EAAY7T,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyT,IACjB5T,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2T,GAAAtT,KAAAH,KAAMJ,KA+BR8T,mBAAqB,SAAAnG,GAAU,IAAApI,EACStF,EAAKY,MAAnCkT,EADqBxO,EACrBwO,eAAgBC,EADKzO,EACLyO,UAChB/O,EAAoC0I,EAApC1I,kBAAmB1D,EAAiBoM,EAAjBpM,GAAI0N,EAAatB,EAAbsB,SAC/BvG,KACGkC,OADH,cAAAjE,OACwB1B,EADxB,KAAA0B,OAC6CsI,EAD7C,KAAAtI,OACyDpF,GAAM,CAC3DuH,KAAM6E,IAEP/E,KAAK,WACAmL,EAAe,GAAGpG,EAAOM,mBAAqBN,UACzCoG,EAAe,GAAGpG,EAAOM,iBAGlC,IAAMgG,EAAY/T,OAAAkJ,GAAA,EAAAlJ,CAAO8T,GACzBC,EAAaC,QAAQ,SAAAjF,GACnB,IAAMkF,EAAYjU,OAAOkU,KAAKnF,GAC9B,GAAIA,EAASkF,GAAT,QAAiCxG,EAAOsB,SAAU,CACpD,IAAMmB,EAAQnB,EAASkF,GAAT,UAAiCE,QAC7C1G,EAAOM,iBAETgB,EAASkF,GAAT,UAAiCG,OAAOlE,EAAO,MAInDnQ,EAAKQ,SAAS,CACZsT,eAAgBA,EAChBC,UAAWC,OAzDAhU,EA8DnBwH,aAAe,SAAArD,GAEbnE,EAAKQ,SAALP,OAAAuN,GAAA,EAAAvN,CAAA,GACGkE,EAAMuD,OAAOC,KAAOxD,EAAMuD,OAAOE,SAjEnB5H,EAqEnBwP,gBAAkB,WAChBxP,EAAKQ,SAAS,CAAES,MAAM,KAtELjB,EAyEnBwK,YAAc,WACZxK,EAAKQ,SAAS,CAAES,MAAM,EAAOoH,OAAQ,MA1EpBrI,EA6EnB6H,aAAe,SAAA1D,GACbA,EAAM2D,iBACN,IAAMwM,EAAc,CAClB3M,KAAM3H,EAAKY,MAAM+G,MAEnBc,KACGQ,KADH,cAAAvC,OACsB1G,EAAKY,MAAMoE,mBAAqBsP,GACnD3L,KAAK,SAAAC,GACJ5I,EAAKQ,SAAS,CACZuT,UAAS,GAAArN,OAAAzG,OAAAkJ,GAAA,EAAAlJ,CAAMD,EAAKY,MAAMmT,WAAjB,CAA4BnL,EAAKC,OAC1C0L,cAAa,GAAA7N,OAAAzG,OAAAkJ,GAAA,EAAAlJ,CAAMD,EAAKY,MAAM2T,eAAjB,CAAgCtU,OAAOkU,KAAKvL,EAAKC,YAGjEF,KAAK,kBAAM3I,EAAKwK,gBAChB1B,MAAM,SAAAF,GACL5I,EAAKQ,SAAS,CACZ6H,OAAQO,EAAKG,SAASF,UA7FX7I,EAmGnBwU,gBAAkB,SAAA9G,GAChBjF,KACGQ,KADH,cAAAvC,OACsBgH,EAAO1I,kBAD7B,KAAA0B,OACkDgH,EAAOsB,UAAYtB,GAClE/E,KAAK,SAAAC,GACJ,IAAI6L,EAAiBxU,OAAAkJ,GAAA,EAAAlJ,CAAOD,EAAKY,MAAMkT,gBACN,IAA7BW,EAAkB5R,OACpB4R,EAAkBC,KAAlBzU,OAAAuN,GAAA,EAAAvN,CAAA,GACGA,OAAOkU,KAAKvL,EAAKC,MAAM,GAAG8L,WAAa/L,EAAKC,KAC3C5I,OAAOkU,KAAKvL,EAAKC,MAAM,GAAG8L,cAI9BF,EAAkB,GAAGxU,OAAOkU,KAAKvL,EAAKC,MAAM,GAAG8L,YAC7C/L,EAAKC,KAAK5I,OAAOkU,KAAKvL,EAAKC,MAAM,GAAG8L,YAGxC,IAAIC,EAAiB3U,OAAAkJ,GAAA,EAAAlJ,CAAOD,EAAKY,MAAMmT,WACjCc,EAAiB7U,EAAKY,MAAMmT,UAAUlJ,OAAO,SAAAmE,GACjD,OAAO/O,OAAOkU,KAAKnF,GAAU2F,aAAejH,EAAOsB,WAE7B6F,EAAe,GAAGnH,EAAOsB,UAAzB,UACN0F,KAAKzU,OAAOkU,KAAKvL,EAAKC,MAAM,GAAG8L,YACjD,IAAMxE,EAAQyE,EAAkBR,QAAQS,EAAe,IACvDD,EAAkBP,OAAOlE,EAAO,GAChCyE,EAAkBP,OAAOlE,EAAO,EAAG0E,EAAe,IAElD7U,EAAKQ,SAAS,CACZsT,eAAgBW,EAChBV,UAAWa,OA/HA5U,EAoInB8U,UAAY,SAAAC,GACVC,SAASC,KAAK/D,MAAMrP,MAAQ,UADR,IAEZqT,EAAqCH,EAArCG,YAAaC,EAAwBJ,EAAxBI,OAAQ/E,EAAgB2E,EAAhB3E,YAE7B,GACG8E,IACAA,EAAY3B,cAAgB4B,EAAO5B,aAClC2B,EAAY/E,QAAUgF,EAAOhF,OAHjC,CAQA,IAAMiF,EAAQpV,EAAKY,MAAMmT,UAAUlJ,OAAO,SAAAmE,GACxC,OAAO/O,OAAOkU,KAAKnF,GAAU,KAAOmG,EAAO5B,YAAcvE,EAAW,OAGhEqG,EAASrV,EAAKY,MAAMmT,UAAUlJ,OAAO,SAAAmE,GACzC,OAAO/O,OAAOkU,KAAKnF,GAAU,KAAOkG,EAAY3B,YAC5CvE,EACA,OAGN,GAAIoG,EAAM,KAAOC,EAAO,GAAI,CAC1B,IAAMC,EAAeF,EAAM,GAAGD,EAAO5B,aAC/BgC,EAAaC,MAAMC,KAAKH,EAAaI,WAE3CH,EAAWlB,OAAOc,EAAOhF,MAAO,GAChCoF,EAAWlB,OAAOa,EAAY/E,MAAO,EAAGC,GAExC,IAAMuF,EAAkB1V,OAAAgD,EAAA,EAAAhD,CAAA,GACnBqV,EADmB,CAEtBI,UAAWH,IAGPK,EAAgB3V,OAAAuN,GAAA,EAAAvN,CAAA,GACnBkV,EAAO5B,YAAcoC,GAGlBE,EAAgB5V,OAAAkJ,GAAA,EAAAlJ,CAAOD,EAAKY,MAAMmT,WAClC+B,EAAkBD,EAAiBzB,QAAQgB,EAAM,IACvDS,EAAiBxB,OAAOyB,EAAiB,GACzCD,EAAiBxB,OAAOyB,EAAiB,EAAGF,GAC5C,IAAMG,EAAQ9V,OAAAgD,EAAA,EAAAhD,CAAA,GACTD,EAAKY,MADI,CAEZmT,UAAW8B,IAKb,OAFA7V,EAAKQ,SAASuV,QACd/V,EAAKgW,sBAAsBL,GAK7B,IAAMM,EAAeT,MAAMC,KAAKL,EAAM,GAAGD,EAAO5B,aAAamC,WAC7DO,EAAa5B,OAAOc,EAAOhF,MAAO,GAElC,IAAM+F,EAAoBjW,OAAAgD,EAAA,EAAAhD,CAAA,GACrBmV,EAAM,GAAGD,EAAO5B,aADK,CAExBmC,UAAWO,IAGPE,EAAgBX,MAAMC,KAC1BJ,EAAO,GAAGH,EAAY3B,aAAamC,WAErCS,EAAc9B,OAAOa,EAAY/E,MAAO,EAAGC,GAE3C,IAAMgG,EAAqBnW,OAAAgD,EAAA,EAAAhD,CAAA,GACtBoV,EAAO,GAAGH,EAAY3B,aADA,CAEzBmC,UAAWS,IAGPE,EAAqBpW,OAAAuN,GAAA,EAAAvN,CAAA,GACxBkV,EAAO5B,YAAc2C,GAElBI,EAAsBrW,OAAAuN,GAAA,EAAAvN,CAAA,GACzBiV,EAAY3B,YAAc6C,GAGvBP,EAAgB5V,OAAAkJ,GAAA,EAAAlJ,CAAOD,EAAKY,MAAMmT,WAClCwC,EAAuBV,EAAiBzB,QAAQgB,EAAM,IACtDoB,EAAwBX,EAAiBzB,QAAQiB,EAAO,IAE9DQ,EAAiBxB,OAAOkC,EAAsB,GAC9CV,EAAiBxB,OAAOkC,EAAsB,EAAGF,GACjDR,EAAiBxB,OAAOmC,EAAuB,GAC/CX,EAAiBxB,OAAOmC,EAAuB,EAAGF,GAElD,IAAMP,EAAQ9V,OAAAgD,EAAA,EAAAhD,CAAA,GACTD,EAAKY,MADI,CAEZmT,UAAW8B,IAEb7V,EAAKQ,SAASuV,GACd/V,EAAKyW,8BACHP,EACAE,KAlOepW,EAsOnBgW,sBAAwB,SAAAL,GACtBlN,KAAMC,MAAN,cAAAhC,OACgB1G,EAAKY,MAAMoE,kBAD3B,KAAA0B,OACgDiP,EAAmBpP,OACjEoP,IAzOe3V,EA6OnByW,8BAAgC,SAC9BP,EACAE,GAEA,IAAMM,EAAmBlB,MAAMmB,GAC7BT,EACAE,GAEF3N,KAAMC,MAAN,cAAAhC,OAA0B1G,EAAKY,MAAMoE,mBAAqB0R,IAnP1D1W,EAAKY,MAAQ,CACXkT,eAAgB,GAChBC,UAAW,GACXQ,cAAe,GACfvP,kBAAmBhF,EAAKD,MAAMiF,kBAC9BqD,OAAQ,GACRpH,MAAM,EACN0G,KAAM,IATS3H,mFAaC,IAAAqF,EAAAlF,KAClBsI,KACGsC,IADH,cAAArE,OACqBvG,KAAKS,MAAMoE,oBAC7B2D,KAAK,SAAAC,GACJvD,EAAK7E,SAAS,CACZsT,eAAgBlL,EAAKC,KAAK4I,QAC1BsC,UAAWnL,EAAKC,KAAKkL,UACrBQ,cAAe3L,EAAKC,KAAK0L,kBAG5BzL,MAAM,SAAAF,GACLvD,EAAK7E,SAAS,CACZ6H,OAAQ,CACNuO,aAAchO,EAAKG,SAASF,KAAKlI,8CA8NlC,IAAAqI,EAAA7I,KACC+G,EAAY/G,KAAKJ,MAAjBmH,QACAmB,EAAWlI,KAAKS,MAAhByH,OAER,OACExH,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,mBACZvF,KAAKS,MAAMyH,OAAOuO,cACjB/V,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,4CACZvF,KAAKS,MAAMyH,OAAOuO,cAIvB/V,EAAAC,EAAAC,cAAA,WAAS2E,UAAU,mBACjB7E,EAAAC,EAAAC,cAACmP,GAAA,EAAD,CACE4E,UAAW3U,KAAK2U,UAChB+B,YAAa1W,KAAK0W,aAEjB1W,KAAKS,MAAM2T,cAAcpJ,IAAI,SAAC8D,EAAYkB,GACzC,IAAMnB,EAAWhG,EAAKpI,MAAMmT,UAAU5D,GAAOlB,GACvCwC,EAAUzC,EAAS0G,UAAUvK,IACjC,SAAA2L,GAAQ,OAAI9N,EAAKpI,MAAMkT,eAAe,GAAGgD,KAE3C,OACEjW,EAAAC,EAAAC,cAACgW,GAAD,CACE1Q,IAAK2I,EAASzI,MACdyI,SAAUA,EACVyC,QAASA,EACTzM,kBAAmBgE,EAAKjJ,MAAMiF,kBAC9BkK,aAAclG,EAAK6K,mBACnBV,oBAAqBnK,EAAKwL,qBAKlC3T,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,oBACXvF,KAAKS,MAAMyH,OAAOuO,cAClB/V,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACEwG,QAAQ,WACR5B,UAAWwB,EAAQ8P,UACnBpV,QAASzB,KAAKqP,gBACdvE,eAAa,GAJf,kBASFpK,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,KAAMd,KAAKS,MAAMK,KACjBC,QAASf,KAAKqK,YACdrJ,kBAAgB,qBAEhBN,EAAAC,EAAAC,cAAA,QAAM4I,SAAUxJ,KAAK0H,cACnBhH,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACED,EAAAC,EAAAC,cAAC6I,GAAA9I,EAAD,CACEiB,WAAS,EACT8H,OAAO,QACPvI,GAAG,OACHqG,KAAK,OACLmC,MAAM,gBACN9G,KAAK,OACLwG,WAAS,EACTO,SAAU5J,KAAKqH,eAEhBa,EAAOV,MACN9G,EAAAC,EAAAC,cAAA,QAAM2E,UAAWwB,EAAQ+C,OAAQ5B,EAAOV,OAG5C9G,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,KACED,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAQc,QAASzB,KAAKqK,YAAa3I,MAAM,WAAzC,UAGAhB,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAQe,MAAM,UAAUmB,KAAK,UAA7B,uBA/TQhB,aA4UXC,wBA/VA,SAAAC,GAAK,MAAK,CACvB8I,aAAc,CACZK,WAAY,mDACZC,OAAQ,EACRC,aAAc,EACdC,UAAW,wCACX3J,MAAO,QACP4J,OAAQ,GACRC,QAAS,UAEXzB,MAAO,CACLpI,MAAO,MACPuI,SAAU,IAEZ4M,UAAW,CACTnV,MAAO,UAgVII,CAAmB2R,IC1VnBqD,oLATX,IAAM/T,EAAgB/C,KAAKJ,MAAMmX,MAAMC,OAAOnS,kBAC9C,OACEnE,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,WACZ7E,EAAAC,EAAAC,cAACqW,GAAD,CAAapS,kBAAmB9B,YALVlB,gCCEVqV,eACnB,SAAAA,EAAYtX,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkX,IACjBrX,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoX,GAAA/W,KAAAH,KAAMJ,KAMRuX,uBAAyB,WACvBtX,EAAKQ,SAAS,CAAE+W,qBAAqB,KANrCvX,EAAKY,MAAQ,CACX2W,qBAAqB,GAHNvX,mFAWbwD,EAAM8I,WAAW7J,SAASF,YAC5BpC,KAAKmX,0DAIP,OACEzW,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,yBACZvF,KAAKS,MAAM2W,qBAAuB1W,EAAAC,EAAAC,cAACyW,GAAA,EAAD,CAAU/Q,GAAG,eAChD5F,EAAAC,EAAAC,cAAA,MAAI2E,UAAU,qCAAd,YACA7E,EAAAC,EAAAC,cAAA,KAAG2E,UAAU,sBAAb,yCAGA7E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,SAASf,UAAW,iBAC3B7E,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAQkC,KAAK,SAASsE,QAAQ,YAAYzF,MAAM,WAAhD,UAIFhB,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,YAAYf,UAAW,iBAC9B7E,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAQkC,KAAK,SAASsE,QAAQ,YAAYzF,MAAM,aAAhD,qBA/B2BG,iCCChByV,eACnB,SAAAA,EAAY1X,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsX,IACjBzX,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwX,GAAAnX,KAAAH,KAAMJ,KAeRuX,uBAAyB,WACvBtX,EAAKQ,SAAS,CAAE+W,qBAAqB,KAjBpBvX,EAoBnBwH,aAAe,SAAArD,GACbnE,EAAKQ,SAALP,OAAAuN,GAAA,EAAAvN,CAAA,GACGkE,EAAMuD,OAAOC,KAAOxD,EAAMuD,OAAOE,SAtBnB5H,EA0BnB6H,aAAe,SAAA1D,GACbA,EAAM2D,iBADgB,IAAAxC,EAEMtF,EAAKY,MAC3B8W,EAAe,CACnBC,MAJoBrS,EAEdqS,MAGNC,SALoBtS,EAEPsS,UAMfnP,KACGQ,KAAK,mBAAoByO,GACzB/O,KAAK,SAAAC,GAAQ,IACJgD,EAAUhD,EAAKC,KAAf+C,MACRzG,aAAaC,QAAQ,MAAOwG,GAC5BD,GAAOC,GACP,IAAMiM,EAASC,KAAWlM,GAE1BpI,EAAMyB,SAAS,CACbjC,KAAMb,EACNQ,QAASkV,IAEX7X,EAAKsX,2BAGNxO,MAAM,SAAAF,GAAI,OACT5I,EAAKQ,SAAS,CACZ6H,OAAQO,EAAKG,SAASF,UAjD5B7I,EAAKY,MAAQ,CACX+W,MAAO,GACPC,SAAU,GACVvP,OAAQ,GACRkP,qBAAqB,GANNvX,mFAWbwD,EAAM8I,WAAW7J,SAASF,YAC5BpC,KAAKmX,0DA2CA,IACCjP,EAAWlI,KAAKS,MAAhByH,OACR,OACExH,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,kBACZvF,KAAKS,MAAM2W,qBAAuB1W,EAAAC,EAAAC,cAACyW,GAAA,EAAD,CAAU/Q,GAAG,eAChD5F,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,OACb7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,aACb7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,OACb7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,oBACb7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,kBACb7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,eACb7E,EAAAC,EAAAC,cAAA,MAAI2E,UAAU,QAAd,UAEF7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,aACb7E,EAAAC,EAAAC,cAAA,QACE2E,UAAU,OACVqS,aAAa,MACbzW,GAAG,YACH0W,WAAW,GACXrO,SAAUxJ,KAAK0H,aACfoQ,OAAO,QAEPpX,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACb7E,EAAAC,EAAAC,cAAA,SAAOyR,QAAQ,SAAf,iBACA3R,EAAAC,EAAAC,cAAA,SACEiC,KAAK,OACL0C,UAAU,yCACViC,KAAK,QACLrG,GAAG,QACH4W,UAAQ,EACRnO,SAAU5J,KAAKqH,gBAGnB3G,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACb7E,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEiC,KAAK,WACL0C,UAAU,yCACViC,KAAK,WACLrG,GAAG,WACH4W,UAAQ,EACRH,aAAa,eACbhO,SAAU5J,KAAKqH,eAEe,IAA/BvH,OAAOkU,KAAK9L,GAAQxF,QACnBhC,EAAAC,EAAAC,cAAA,uDAGJF,EAAAC,EAAAC,cAAA,UACEiC,KAAK,SACL0C,UAAU,qCACVpE,GAAG,YAHL,wBAxGaU,aCHdmW,eACnB,SAAAA,EAAYpY,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgY,IACjBnY,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkY,GAAA7X,KAAAH,KAAMJ,KAaRuX,uBAAyB,WACvBtX,EAAKQ,SAAS,CAAE+W,qBAAqB,KAfpBvX,EAwBnBwH,aAAe,SAAArD,GACbnE,EAAKQ,SAALP,OAAAuN,GAAA,EAAAvN,CAAA,GACGkE,EAAMuD,OAAOC,KAAOxD,EAAMuD,OAAOE,SA1BnB5H,EA8BnBoY,YAAc,WACZpY,EAAKQ,SAAS,CACZ6X,iBAAiB,KAhCFrY,EAoCnB6H,aAAe,SAAA1D,GACbA,EAAM2D,iBADgB,IAAAxC,EAQlBtF,EAAKY,MACH0X,EAAU,CACdX,MAVoBrS,EAGpBqS,MAQAhL,UAXoBrH,EAIpBqH,UAQA4L,SAZoBjT,EAKpBiT,SAQAX,SAboBtS,EAMpBsS,SAQAY,gBAdoBlT,EAOpBkT,iBAUF/P,KACGQ,KAAK,sBAAuBqP,GAC5B3P,KAAK,SAAAC,GACJ5I,EAAKoY,gBAENtP,MAAM,SAAAF,GACL5I,EAAKQ,SAAS,CAAE6H,OAAQO,EAAKG,SAASF,UAzD1C7I,EAAKY,MAAQ,CACX+W,MAAO,GACPhL,UAAW,GACX4L,SAAU,GACVX,SAAU,GACVY,gBAAiB,GACjBnQ,OAAQ,GACRgQ,iBAAiB,EACjBd,qBAAqB,GAVNvX,mFAmBbwD,EAAM8I,WAAW7J,SAASF,YAC5BpC,KAAKmX,0DA2CA,IACCjP,EAAWlI,KAAKS,MAAhByH,OACR,OACExH,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,kBACZvF,KAAKS,MAAMyX,iBAAmBxX,EAAAC,EAAAC,cAACyW,GAAA,EAAD,CAAU/Q,GAAG,WAC3CtG,KAAKS,MAAM2W,qBAAuB1W,EAAAC,EAAAC,cAACyW,GAAA,EAAD,CAAU/Q,GAAG,eAChD5F,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,OACb7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,aACb7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,OACb7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,oBACb7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,kBACb7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,eACb7E,EAAAC,EAAAC,cAAA,MAAI2E,UAAU,QAAd,aAEF7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,aACb7E,EAAAC,EAAAC,cAAA,QACE2E,UAAU,OACVqS,aAAa,MACbzW,GAAG,YACH0W,WAAW,GACXrO,SAAUxJ,KAAK0H,cAEfhH,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACb7E,EAAAC,EAAAC,cAAA,SAAOyR,QAAQ,aAAf,cACA3R,EAAAC,EAAAC,cAAA,SACEiC,KAAK,OACL0C,UAAU,yCACViC,KAAK,YACLrG,GAAG,YACH4W,UAAQ,EACRnO,SAAU5J,KAAKqH,aACfyQ,OAAO,UAGXpX,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACb7E,EAAAC,EAAAC,cAAA,SAAOyR,QAAQ,YAAf,aACA3R,EAAAC,EAAAC,cAAA,SACEiC,KAAK,OACL0C,UAAU,yCACViC,KAAK,WACLrG,GAAG,WACH4W,UAAQ,EACRnO,SAAU5J,KAAKqH,gBAGnB3G,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACb7E,EAAAC,EAAAC,cAAA,SAAOyR,QAAQ,SAAf,iBACA3R,EAAAC,EAAAC,cAAA,SACEiC,KAAK,QACL0C,UAAU,yCACViC,KAAK,QACLrG,GAAG,QACH4W,UAAQ,EACRnO,SAAU5J,KAAKqH,eAEhBa,EAAOsP,OAAS9W,EAAAC,EAAAC,cAAA,WAAMsH,EAAOsP,QAEhC9W,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACb7E,EAAAC,EAAAC,cAAA,SAAOyR,QAAQ,YAAf,YACA3R,EAAAC,EAAAC,cAAA,SACEiC,KAAK,WACL0C,UAAU,yCACViC,KAAK,WACLrG,GAAG,WACH4W,UAAQ,EACRnO,SAAU5J,KAAKqH,eAEhBa,EAAOuP,UAAY/W,EAAAC,EAAAC,cAAA,WAAMsH,EAAOuP,WAEnC/W,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACb7E,EAAAC,EAAAC,cAAA,SAAOyR,QAAQ,mBAAf,oBAGA3R,EAAAC,EAAAC,cAAA,SACEiC,KAAK,WACL0C,UAAU,yCACViC,KAAK,kBACLrG,GAAG,kBACH4W,UAAQ,EACRnO,SAAU5J,KAAKqH,eAEhBa,EAAOmQ,iBACN3X,EAAAC,EAAAC,cAAA,WAAMsH,EAAOmQ,kBAGjB3X,EAAAC,EAAAC,cAAA,UACEiC,KAAK,SACL0C,UAAU,qCACVpE,GAAG,YAHL,2BArJgBU,uBCYvByW,GAbM,SAAAC,GAAA,IAAc1W,EAAd0W,EAAGC,UAAyBC,EAA5B3Y,OAAA4Y,GAAA,EAAA5Y,CAAAyY,EAAA,sBACnB7X,EAAAC,EAAAC,cAAC+X,GAAA,EAAD7Y,OAAAsQ,OAAA,GACMqI,EADN,CAEEG,OAAQ,SAAAhZ,GAAK,OAC8B,IAAzCyD,EAAM8I,WAAW7J,SAASF,WACxB1B,EAAAC,EAAAC,cAACiB,EAAcjC,GAEfc,EAAAC,EAAAC,cAACyW,GAAA,EAAD,CAAU/Q,GAAG,0BCUfuS,GAAU7T,aAAa8T,QAAQ,OACrC,GAAID,GAAS,CACXrN,GAAOqN,IACP,IAAME,GAAepB,KAAWkB,IAChCxV,EAAMyB,SAAS,CACbjC,KAAMb,EACNQ,QAASuW,KAGX,IAAMC,GAAcC,KAAKC,MAAQ,IAC7BH,GAAaI,IAAMH,KACrBhU,aAAa+G,WAAW,OACxBP,IAAO,GACPnI,EAAMyB,SAAS,CACbjC,KAAMb,EACNQ,QAAS,KAEXW,OAAO6I,SAASC,KAAO,SA8BZmN,oLAxBX,OACE1Y,EAAAC,EAAAC,cAACyY,GAAA,EAAD,CAAUhW,MAAOA,GACf3C,EAAAC,EAAAC,cAAC0Y,GAAA,EAAD,KACE5Y,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,OACb7E,EAAAC,EAAAC,cAAC2Y,GAAD,MACA7Y,EAAAC,EAAAC,cAAC+X,GAAA,EAAD,CAAOa,OAAK,EAACC,KAAK,IAAIjB,UAAWtB,KACjCxW,EAAAC,EAAAC,cAAC+X,GAAA,EAAD,CAAOa,OAAK,EAACC,KAAK,SAASjB,UAAWlB,KACtC5W,EAAAC,EAAAC,cAAC+X,GAAA,EAAD,CAAOa,OAAK,EAACC,KAAK,YAAYjB,UAAWR,KAEzCtX,EAAAC,EAAAC,cAAC8Y,GAAA,EAAD,KACEhZ,EAAAC,EAAAC,cAAC+Y,GAAD,CAAcH,OAAK,EAACC,KAAK,aAAajB,UAAWtO,KACjDxJ,EAAAC,EAAAC,cAAC+Y,GAAD,CACEH,OAAK,EACLC,KAAK,gCACLjB,UAAW1B,gBAhBTjV,aC9BEwD,QACW,cAA7BlC,OAAO6I,SAAS4N,UAEe,UAA7BzW,OAAO6I,SAAS4N,UAEhBzW,OAAO6I,SAAS4N,SAAS7C,MACvB,2DCZN8C,IAASjB,OAAOlY,EAAAC,EAAAC,cAACkZ,GAAD,MAASjF,SAASkF,eAAe,SD2H3C,kBAAmBzW,WACrBA,UAAU0W,cAAcC,MAAMzR,KAAK,SAAA0R,GACjCA,EAAaC","file":"static/js/main.a8dd3340.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({});\n\nclass DeleteItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDeleteDialogActive: true\n    };\n  }\n  handleDeleteProjectActiveDialog = () => {\n    this.setState({\n      isDeleteDialogActive: false\n    });\n  };\n\n  handleDeleteProject = project => {\n    this.props.handleDeleteProject(project);\n    this.handleDeleteProjectActiveDialog();\n  };\n\n  render() {\n    return (\n      <Dialog\n        open={this.state.isDeleteDialogActive}\n        onClose={this.handleDeleteProjectActiveDialog}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Delete Project\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to delete:\n            {\" \" + this.props.project.projectName}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={this.handleDeleteProjectActiveDialog}\n            color=\"primary\"\n          >\n            No\n          </Button>\n          <Button\n            onClick={this.handleDeleteProject.bind(this, this.props.project)}\n            color=\"primary\"\n            autoFocus\n          >\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\nexport default withStyles(styles)(DeleteItem);\n","//Types.js is used to define the type of reducer actions that we want to perfrom\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const SET_ACTIVE_PROJECT = \"SET_ACTIVE_PROJECT\";\n","import { SET_CURRENT_USER, SET_ACTIVE_PROJECT } from \"../actions/Types\";\n\nconst initialState = {\n  user: {},\n  validToken: false\n};\n\nconst isTokenValid = payload => {\n  if (payload) {\n    return true;\n  }\n  return false;\n};\n\nconst getActiveProject = actionpayload => {\n  return actionpayload.activeProject;\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: isTokenValid(action.payload),\n        user: action.payload\n      };\n    case SET_ACTIVE_PROJECT:\n      return {\n        ...state,\n        activeProject: getActiveProject(action.payload)\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport SecurityReducer from \"./SecurityReducer\";\n\nexport default combineReducers({\n  //this takes in all the reducers that we want to use which will be added to the root reducer, which is put into the store.\n  security: SecurityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst reactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && reactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component, Fragment } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport DeleteItem from \"./DeleteItem\";\nimport store from \"../../../store\";\nimport { SET_ACTIVE_PROJECT } from \"../../../actions/Types\";\nimport { Link } from \"react-router-dom\";\n\nconst styles = theme => ({});\n\nclass ProjectItem extends Component {\n  constructor(props) {\n    super(props);\n\n    const { project } = this.props;\n\n    this.state = {\n      anchorEl: null,\n      deleteProject: null,\n      updateProject: null,\n      project: project\n    };\n  }\n\n  handleOpenMenuClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleCloseMenuClick = option => {\n    this.setState({ anchorEl: null });\n  };\n\n  handleDeleteProject = project => {\n    this.props.deleteProject(project);\n  };\n\n  handleDeleteProjectClick = event => {\n    this.setState({ deleteProject: event.currentTarget });\n  };\n\n  handleUpdateProjectClick = event => {\n    this.setState({ updateProject: event.currentTarget });\n  };\n\n  handleUpdateProjectClose = () => {\n    this.handleCloseMenuClick(null);\n    this.setState({ updateProject: null });\n  };\n\n  updateProjectInfo = projectInfo => {\n    this.setState({ project: projectInfo });\n  };\n\n  activateProject = projectIdentifier => {\n    store.dispatch({\n      type: SET_ACTIVE_PROJECT,\n      payload: { activeProject: projectIdentifier }\n    });\n    const serializedState = projectIdentifier;\n    localStorage.setItem(\"activeProject\", serializedState);\n\n    return;\n  };\n\n  render() {\n    const { project } = this.props;\n\n    const { anchorEl, deleteProject } = this.state;\n    // const { anchorEl, deleteProject, updateProject } = this.state;\n    const menuOpen = Boolean(anchorEl);\n    const deleteOpen = Boolean(deleteProject);\n    return (\n      <div className=\"col-md-6 col-lg-4 item\">\n        <Card onClick={() => this.activateProject(project.projectIdentifier)}>\n          <CardHeader\n            action={\n              <Fragment>\n                <IconButton\n                  aria-label=\"More\"\n                  aria-owns={menuOpen ? \"long-menu\" : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleOpenMenuClick}\n                >\n                  <MoreVertIcon />\n                </IconButton>\n                <Menu\n                  id=\"long-menu\"\n                  anchorEl={anchorEl}\n                  open={menuOpen}\n                  onClose={this.handleCloseMenuClick}\n                >\n                  {\n                    // <MenuItem key=\"updateItem\">\n                    //     <span onClick={this.handleUpdateProjectClick}>\n                    //       Update Project\n                    //     </span>\n                    //     {updateOpen && (\n                    //       <ProjectDialog\n                    //         type=\"Update\"\n                    //         onClose={this.handleUpdateProjectClose}\n                    //         projectInfo={this.state.project}\n                    //         updateProjectInfo={this.updateProjectInfo}\n                    //       />\n                    //     )}\n                    //   </MenuItem>\n                  }\n\n                  <MenuItem key=\"deleteItem\">\n                    <span onClick={this.handleDeleteProjectClick}>\n                      Delete Project\n                    </span>\n\n                    {deleteOpen && (\n                      <DeleteItem\n                        project={project}\n                        handleDeleteProject={this.handleDeleteProject}\n                      />\n                    )}\n                  </MenuItem>\n                </Menu>\n              </Fragment>\n            }\n            title={\n              <Link to={`/dashboard/${project.projectIdentifier}`}>\n                {project.projectName}\n              </Link>\n            }\n            subheader={\"created: \" + project.createdAt}\n          />\n        </Card>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(ProjectItem);\n","export default class Project {\n  constructor(\n    id = \"\",\n    projectName = \"\",\n    projectIdentifier = \"\",\n    description = \"\",\n    createdAt = \"\"\n  ) {\n    this.id = id;\n    this.projectName = projectName;\n    this.projectIdentifier = projectIdentifier;\n    this.description = description;\n    this.createdAt = createdAt;\n  }\n}\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = theme => ({\n  appBar: {\n    position: \"relative\",\n    backgroundColor: \"#2196F3\"\n  }\n});\nfunction DialogHeader(props) {\n  const { classes } = props;\n  return (\n    <AppBar className={classes.appBar}>\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\">\n          {props.type} Project\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default withStyles(styles)(DialogHeader);\n","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Project from \"../../../model/Project\";\nimport axios from \"axios\";\nimport DialogHeader from \"./DialogHeader\";\n\nconst styles = theme => ({\n  error: {\n    color: \"red\",\n    fontSize: 12\n  }\n});\n\nclass ProjectDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDialogActive: true,\n      project: new Project(),\n      errors: {}\n    };\n  }\n\n  handleChange = event => {\n    const projectState = { ...this.state.project };\n    projectState[event.target.name] = event.target.value;\n    this.setState({\n      project: projectState\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const projectInfo = new Project();\n    const { projectName, description, createdAt } = this.state.project;\n    if (this.props.type === \"Create\") {\n      projectInfo.projectName = projectName;\n      projectInfo.description = description;\n      projectInfo.createdAt = createdAt;\n      projectInfo.projectIdentifier = this.slugifyProjectName(projectName);\n      this.saveNewProject(projectInfo);\n    } else {\n      const {\n        id,\n        projectIdentifier,\n        projectName,\n        description,\n        createdAt\n      } = this.props.projectInfo;\n      projectInfo.id = id;\n      projectInfo.projectIdentifier = projectIdentifier;\n      projectInfo.projectName = !this.state.project.projectName\n        ? projectName\n        : this.state.project.projectName;\n      projectInfo.description = !this.state.project.description\n        ? description\n        : this.state.project.description;\n      projectInfo.createdAt = !this.state.project.createdAt\n        ? createdAt\n        : this.state.project.createdAt;\n      this.updateProjectInformation(projectInfo);\n    }\n  };\n\n  slugifyProjectName(projectName) {\n    const splitString = projectName.split(\" \");\n    const projectIdentifierSlug = splitString.join(\"-\");\n    return projectIdentifierSlug.toUpperCase();\n  }\n\n  updateProjectInformation(projectInfo) {\n    axios\n      .patch(\"/api/project\", projectInfo)\n      .then(json => {\n        this.props.updateProjectInfo(json.data);\n        this.props.onClose();\n      })\n      .catch(json => {\n        this.setState({\n          errors: {\n            projectName: json.response.data.projectName,\n            description: json.response.data.description\n          }\n        });\n        return;\n      });\n  }\n\n  saveNewProject(projectInfo) {\n    axios\n      .post(\"/api/project\", projectInfo)\n      .then(json => {\n        this.props.updateAllProjects([...this.props.allProjects, json.data]);\n      })\n      .then(() => {\n        this.props.onClose();\n      })\n      .catch(json => {\n        const { description, projectName } = json.response.data;\n        this.setState({\n          errors: {\n            projectName: projectName,\n            description: description\n          }\n        });\n        return;\n      });\n  }\n\n  render() {\n    const { classes, projectInfo } = this.props;\n    const { errors } = this.state;\n\n    return (\n      <Dialog\n        open={this.state.isDialogActive}\n        onClose={this.props.onClose}\n        aria-labelledby=\"form-dialog-title\"\n        scroll=\"paper\"\n        fullWidth={true}\n        maxWidth={\"md\"}\n      >\n        <DialogHeader type={this.props.type} />\n        <form onSubmit={this.handleSubmit}>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              name=\"projectName\"\n              label=\"Project Name\"\n              type=\"text\"\n              fullWidth\n              onChange={this.handleChange}\n              defaultValue={\n                projectInfo === undefined ? \"\" : projectInfo.projectName\n              }\n            />\n            {errors.projectName && (\n              <span className={classes.error}>{errors.projectName}</span>\n            )}\n            {\n              <TextField\n                id=\"standard-multiline-static\"\n                name=\"description\"\n                label=\"Project Description\"\n                multiline\n                rows=\"4\"\n                margin=\"normal\"\n                fullWidth\n                onChange={this.handleChange}\n                defaultValue={\n                  projectInfo === undefined ? \"\" : projectInfo.description\n                }\n              />\n            }\n            {errors.description && (\n              <span className={classes.error}>{errors.description}</span>\n            )}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.props.onClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button color=\"primary\" type=\"submit\">\n              {this.props.type}\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    );\n  }\n}\nexport default withStyles(styles)(ProjectDialog);\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./ProjectItem\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Project from \"../../../model/Project\";\nimport ProjectDialog from \"./ProjectDialog\";\n\nconst styles = theme => ({\n  createButton: {\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n    border: 0,\n    borderRadius: 3,\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n    color: \"white\",\n    height: 35,\n    padding: \"0 30px\"\n  }\n});\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allProjects: [],\n      project: new Project(),\n      isProjectDialogActive: false\n    };\n  }\n  handleIsProjectDialogActive = () => {\n    this.setState({ isProjectDialogActive: true });\n  };\n\n  handleClose = () => {\n    this.setState({\n      isProjectDialogActive: false,\n      errors: {},\n      project: new Project()\n    });\n  };\n\n  componentDidMount() {\n    axios.get(\"/api/project\").then(json => {\n      this.setState({\n        allProjects: json.data\n      });\n    });\n  }\n\n  handleProjectDelete = project => {\n    const currentProjects = this.state.allProjects;\n    const { projectIdentifier } = project;\n\n    axios.delete(`/api/project/${projectIdentifier}`).then(() => {\n      let filteredProjects = currentProjects.filter(\n        item => item.projectIdentifier !== projectIdentifier\n      );\n      this.setState({ allProjects: filteredProjects });\n    });\n  };\n\n  updateAllProjects = state => {\n    this.setState({ allProjects: state });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const allProjects = this.state.allProjects;\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">All Projects</h1>\n              <br />\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={this.handleIsProjectDialogActive}\n                className={classes.createButton}\n                disableRipple\n              >\n                Create New project\n              </Button>\n              {this.state.isProjectDialogActive && (\n                <ProjectDialog\n                  type=\"Create\"\n                  onClose={this.handleClose}\n                  allProjects={this.state.allProjects}\n                  updateAllProjects={this.updateAllProjects}\n                />\n              )}\n              <br />\n              <hr />\n              <section className=\"gallery-block grid-gallery\">\n                <div className=\"container\">\n                  <div className=\"row\">\n                    {allProjects.map(project => (\n                      <ProjectItem\n                        key={project.id}\n                        project={project}\n                        deleteProject={this.handleProjectDelete}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </section>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Dashboard);\n","import axios from \"axios\";\n\nexport const setJwt = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n","//this is what the navbar will look like\n\nimport React, { Component, Fragment } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport store from \"../../store\";\nimport { setJwt } from \"../../security/SetJwt\";\nimport { SET_CURRENT_USER } from \"../../actions/Types\";\n\nconst styles = theme => ({\n  navbar: {\n    background: \"linear-gradient(to right, #0062e6, #33aeff)\",\n    border: 0,\n    color: \"white\",\n    padding: \"0 30px\",\n    boxShadow: \"none\"\n  },\n  navbarText: {\n    color: \"#fff\",\n    \"&:hover\": {\n      color: \"#fff\",\n      textDecoration: \"none\"\n    }\n  },\n  grow: {\n    flexGrow: 1,\n    color: \"#fff\"\n  }\n});\nclass Navbar extends Component {\n  logoutUser = event => {\n    localStorage.removeItem(\"jwt\");\n    localStorage.removeItem(\"activeProject\");\n    setJwt(false);\n    store.dispatch({\n      type: SET_CURRENT_USER,\n      payload: {}\n    });\n    window.location.href = \"/\";\n  };\n  render() {\n    const { validToken, user } = store.getState().security;\n    const { classes } = this.props;\n    return (\n      <div>\n        <AppBar position=\"static\" className={classes.navbar}>\n          <Toolbar>\n            <Typography variant=\"h6\" className={classes.grow}>\n              <Link to=\"/\" className={classes.navbarText}>\n                TrellBan\n              </Link>\n            </Typography>\n            {validToken && Object.entries(user).length !== 0 && (\n              <Fragment>\n                <Link to=\"/dashboard\" className={classes.navbarText}>\n                  <Button\n                    variant=\"text\"\n                    disableRipple\n                    className={classes.navbarText}\n                  >\n                    {user.firstName}'s Dashboard\n                  </Button>\n                </Link>\n                <Link to=\"/\" className={classes.navbarText}>\n                  <Button\n                    variant=\"text\"\n                    disableRipple\n                    className={classes.navbarText}\n                    onClick={() => this.logoutUser()}\n                  >\n                    Logout\n                  </Button>\n                </Link>\n              </Fragment>\n            )}\n            {Object.entries(user).length === 0 && (\n              <Fragment>\n                <Link to=\"/login\" className={classes.navbarText}>\n                  <Button\n                    variant=\"text\"\n                    disableRipple\n                    className={classes.navbarText}\n                  >\n                    Login\n                  </Button>\n                </Link>\n                <Link to=\"/register\" className={classes.navbarText}>\n                  <Button\n                    variant=\"text\"\n                    disableRipple\n                    className={classes.navbarText}\n                  >\n                    Register\n                  </Button>\n                </Link>\n              </Fragment>\n            )}\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(Navbar);\n","import React, { Component, Fragment } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nconst styles = theme => ({\n  appBar: {\n    position: \"relative\",\n    backgroundColor: \"#2196F3\"\n  },\n  flex: {\n    flex: 1\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  }\n});\nclass TicketDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      diableSaveButton: true,\n      readOnlyMode: true,\n      openTicketDetails: false,\n      isDragDisabled: false,\n      isDropDownActive: false,\n      summary: this.props.ticket.summary || \"\",\n      acceptanceCriteria: this.props.ticket.acceptanceCriteria || \"\",\n      complexity: this.props.ticket.complexity || \"\",\n      priority: this.props.ticket.priority || \"\"\n    };\n  }\n  handleEditTicket = () => {\n    this.setState({\n      readOnlyMode: !this.state.readOnlyMode,\n      diableSaveButton: !this.state.diableSaveButton\n    });\n  };\n\n  handleViewTicketDetailsDialog = () => {\n    this.setState({\n      openTicketDetails: !this.state.openTicketDetails,\n      isDragDisabled: !this.state.isDragDisabled\n    });\n  };\n\n  handleViewPriorityDropDown = () => {\n    this.setState({\n      isDropDownActive: !this.state.isDropDownActive\n    });\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const updatedTicket = {\n      id: this.props.ticket.id,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      complexity: this.state.complexity,\n      priority: this.props.ticket.priority\n    };\n    this.props.handleUpdateTicket(updatedTicket);\n    // console.log(\"updated ticket: \" + JSON.stringify(updatedTicket));\n    // console.log(\n    //   `/dashboard/${this.props.ticket.projectIdentifier}/${\n    //     this.props.ticket.swimlane\n    //   }/${updatedTicket.id}`\n    // );\n    // axios.patch(`/dashboard/${this.props.ticket.projectIdentifier}`)\n  };\n\n  render() {\n    const { classes, ticket } = this.props;\n    return (\n      <Fragment>\n        <span onClick={this.handleViewTicketDetailsDialog}>\n          {ticket.projectSequence}\n        </span>\n        <Dialog\n          open={this.state.openTicketDetails}\n          onClose={this.handleViewTicketDetailsDialog}\n          aria-labelledby=\"form-dialog-title\"\n          fullWidth\n          maxWidth=\"sm\"\n        >\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                {ticket.projectIdentifier} / {ticket.projectSequence}\n              </Typography>\n              <Button color=\"inherit\" onClick={this.handleEditTicket}>\n                Edit Ticket\n              </Button>\n            </Toolbar>\n          </AppBar>\n          <form onSubmit={this.handleSubmit}>\n            <DialogContent>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                name=\"summary\"\n                label=\"Ticket Summary\"\n                type=\"text\"\n                fullWidth\n                onChange={this.handleChange}\n                defaultValue={ticket.summary}\n                variant=\"outlined\"\n                InputProps={{\n                  readOnly: this.state.readOnlyMode\n                }}\n              />\n              <TextField\n                margin=\"dense\"\n                id=\"standard-multiline-static\"\n                name=\"acceptanceCriteria\"\n                label=\"Acceptance Criteria\"\n                multiline\n                rows=\"4\"\n                // margin=\"normal\"\n                fullWidth\n                onChange={this.handleChange}\n                defaultValue={ticket.acceptanceCriteria}\n                variant=\"outlined\"\n                InputProps={{\n                  readOnly: this.state.readOnlyMode\n                }}\n              />\n              <TextField\n                margin=\"dense\"\n                id=\"complexity\"\n                name=\"complexity\"\n                label=\"Ticket Complexity\"\n                type=\"number\"\n                fullWidth\n                onChange={this.handleChange}\n                defaultValue={ticket.complexity}\n                variant=\"outlined\"\n                InputProps={{\n                  readOnly: this.state.readOnlyMode\n                }}\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button\n                onClick={this.handleViewTicketDetailsDialog}\n                color=\"primary\"\n              >\n                Close\n              </Button>\n              <Button\n                onClick={this.handleViewTicketDetailsDialog}\n                color=\"primary\"\n                disabled={this.state.diableSaveButton}\n                type=\"submit\"\n              >\n                Save Changes\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(TicketDialog);\n","import React, { Component, Fragment } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n  deletIcon: {\n    fontSize: 15\n  }\n});\n\nclass DeleteButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDeleteTicketDiaglogActive: false\n    };\n  }\n\n  handleOpenDeleteTicketDialog = event => {\n    event.stopPropagation();\n    this.setState({ isDeleteTicketDiaglogActive: true });\n  };\n\n  handleCloseDeleteTicketDialog = () => {\n    this.setState({ isDeleteTicketDiaglogActive: false });\n  };\n\n  handleDeleteTicket = ticket => {\n    this.handleCloseDeleteTicketDialog();\n    ticket.swimLane = this.props.swimLaneId;\n    this.props.removeTicket(ticket);\n  };\n  render() {\n    const { classes, ticket } = this.props;\n    return (\n      <Fragment>\n        <IconButton\n          aria-label=\"Delete\"\n          size=\"small\"\n          disableRipple\n          onClick={this.handleOpenDeleteTicketDialog}\n        >\n          <ClearIcon size=\"small\" className={classes.deletIcon} />\n        </IconButton>\n        <Dialog\n          open={this.state.isDeleteTicketDiaglogActive}\n          onClose={this.handleCloseDeleteTicketDialog}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Remove Ticket?\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Are you sure you want to delete:{\" \"}\n              <b>{this.props.ticket.projectSequence}</b>?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={this.handleCloseDeleteTicketDialog}\n              color=\"primary\"\n            >\n              No\n            </Button>\n            <Button\n              onClick={this.handleDeleteTicket.bind(this, ticket)}\n              color=\"primary\"\n            >\n              Yes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\nexport default withStyles(styles)(DeleteButton);\n","import React, { Component } from \"react\";\nimport \"../projectDashboard.css\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\nimport TicketDialog from \"./TicketDialog\";\nimport DeleteButton from \"./DeleteButton\";\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  cards: {\n    marginTop: 5,\n    marginBottom: 5,\n    borderRadius: 1\n  },\n  high: {\n    borderLeft: \"3px solid red\"\n  },\n  medium: {\n    borderLeft: \"3px solid #FF8C19\"\n  },\n  low: {\n    borderLeft: \"3px solid #42CC00\"\n  },\n  deletIcon: {\n    fontSize: 15\n  }\n});\n\nclass Ticket extends Component {\n  constructor(props) {\n    super(props);\n    const { ticket } = this.props;\n    this.state = {\n      open: false,\n      isHovering: false,\n      summary: ticket.summary,\n      acceptanceCriteria: ticket.acceptanceCriteria,\n      complexity: ticket.complexity,\n      priority: ticket.priority,\n      swimlaneId: this.props.swimLaneId\n    };\n  }\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n  handleDelete = ticket => {\n    ticket.swimLane = this.props.swimLaneId;\n    this.props.removeTicket(ticket);\n  };\n\n  handleClickOpen = event => {\n    event.stopPropagation();\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleEditTicket = () => {\n    this.setState({\n      readOnlyMode: !this.state.readOnlyMode,\n      diableSaveButton: !this.state.diableSaveButton\n    });\n  };\n\n  deleteButton = () => {\n    const { ticket } = this.props;\n\n    return (\n      <DeleteButton\n        ticket={ticket}\n        removeTicket={this.handleDelete.bind(this, ticket)}\n      />\n    );\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleUpdateTicket = ticket => {\n    ticket[\"ticketNumberPosition\"] = this.props.ticket.ticketNumberPosition;\n    axios.patch(\n      `/dashboard/${this.props.projectIdentifier}/${this.props.swimLaneId}/${\n        ticket.id\n      }`,\n      ticket\n    );\n  };\n\n  openProjectDetailsDialog = ticket => {\n    return (\n      <TicketDialog\n        ticket={ticket}\n        handleUpdateTicket={this.handleUpdateTicket}\n      />\n    );\n  };\n\n  render() {\n    const { ticket, classes } = this.props;\n    const priorityClass = ticket.priority;\n    return (\n      <Draggable\n        index={this.props.index}\n        draggableId={this.props.ticket.projectSequence}\n        isDragDisabled={this.state.isDragDisabled}\n      >\n        {(provided, snapshot) => (\n          <div\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n          >\n            <Card\n              className={classNames(\n                classes.cards,\n                { [classes.high]: priorityClass === \"high\" },\n                { [classes.medium]: priorityClass === \"medium\" },\n                { [classes.low]: priorityClass === \"low\" }\n              )}\n              style={{\n                backgroundColor: snapshot.isDragging ? \"#F0F2EA\" : null\n              }}\n            >\n              <CardHeader\n                title={this.openProjectDetailsDialog(ticket)}\n                subheader={this.props.ticket.summary}\n                action={this.deleteButton()}\n              />\n            </Card>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\nexport default withStyles(styles)(Ticket);\n","import React, { Component } from \"react\";\nimport Ticket from \"./Tickets/Ticket\";\n\nexport default class InnerList extends Component {\n  componentWillUpdate(nextProps) {\n    if (nextProps.tickets === this.props.tickets) {\n      return false;\n    }\n    return true;\n  }\n  render() {\n    // console.log(\"this . props : \" + JSON.stringify(this.props));\n    return this.props.tickets.map((ticket, index) => (\n      <Ticket\n        key={index}\n        ticket={ticket}\n        index={index}\n        removeTicket={this.props.removeTicket}\n        swimLaneId={this.props.swimLaneId}\n        handleChange={this.props.onChange}\n        projectIdentifier={this.props.projectIdentifier}\n      />\n    ));\n  }\n}\n","import React, { Component } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nconst styles = theme => ({\n  appBar: {\n    position: \"relative\",\n    backgroundColor: \"#2196F3\"\n  },\n  flex: {\n    flex: 1\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  }\n});\nclass CreateTicket extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCreateTicketDialogActive: this.props.isActive,\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      projectIdentifier: this.props.projectIdentifier,\n      priority: \"\",\n      complexity: \"\",\n      isDropDownActive: false,\n      swimlane: this.props.swimLane\n    };\n  }\n\n  handleCreateTicketDialog = () => {\n    this.setState({\n      isCreateTicketDialogActive: !this.state.isCreateTicketDialogActive\n    });\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleViewDropDownMenu = () => {\n    this.setState({ isDropDownActive: !this.state.openDropDown });\n  };\n\n  handleDropDownOpen = () => {\n    this.setState({ isDropDownActive: true });\n  };\n\n  handleDropDownClose = () => {\n    this.setState({ isDropDownActive: false });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const newTicket = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      projectIdentifier: this.state.projectIdentifier,\n      priority: this.state.priority,\n      swimLane: this.props.swimLane,\n      complexity: this.state.complexity\n    };\n    this.props.saveNewTicket(newTicket);\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Dialog\n        open={this.state.isCreateTicketDialogActive}\n        onClose={this.handleCreateTicketDialog}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n              Create New Ticket\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <form onSubmit={this.handleSubmit}>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              name=\"summary\"\n              label=\"Summary\"\n              type=\"text\"\n              fullWidth\n              onChange={this.handleChange}\n            />\n            <TextField\n              id=\"standard-multiline-static\"\n              name=\"acceptanceCriteria\"\n              label=\"Acceptance Criteria\"\n              multiline\n              rows=\"4\"\n              margin=\"normal\"\n              fullWidth\n              onChange={this.handleChange}\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"complexity\"\n              name=\"complexity\"\n              label=\"Complexity (Optional)\"\n              type=\"number\"\n              fullWidth\n              onChange={this.handleChange}\n            />\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"demo-controlled-open-select\">\n                Priority (Optional)\n              </InputLabel>\n              <Select\n                open={this.state.isDropDownActive}\n                onClose={this.handleDropDownClose}\n                onOpen={this.handleDropDownOpen}\n                value={this.state.priority}\n                onChange={this.handleChange}\n                inputProps={{\n                  name: \"priority\",\n                  id: \"demo-controlled-open-select\"\n                }}\n              >\n                <MenuItem value={\"low\"}>Low</MenuItem>\n                <MenuItem value={\"medium\"}>Medium</MenuItem>\n                <MenuItem value={\"high\"}>High</MenuItem>\n              </Select>\n            </FormControl>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleCreateTicketDialog} color=\"primary\">\n              Cancel\n            </Button>\n            <Button\n              onClick={this.handleCreateTicketDialog}\n              color=\"primary\"\n              type=\"submit\"\n            >\n              Create\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    );\n  }\n}\n\nexport default withStyles(styles)(CreateTicket);\n","import React, { Component } from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport InnerList from \"./InnerList\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CreateTicket from \"./Tickets/CreateTicket\";\n\nconst TaskList = styled.div`\n  flex-grow: 1;\n`;\nconst styles = theme => ({\n  ticket: {\n    backgroundColor: \"#BFFAFF\"\n  }\n});\n\nclass SwimLane extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCreateTicketActive: false,\n      projectIdentifier: this.props.projectIdentifier,\n      isSwimLaneOptionsMenuOpen: false\n    };\n  }\n  handleIsCreateTicketActive = () => {\n    this.setState({ isCreateTicketActive: !this.state.isCreateTicketActive });\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = ticket => {\n    this.props.addTicketToSwimLane(ticket);\n  };\n\n  handleSwimLaneOptionsMenu = event => {\n    // console.log(\"opening swimlane options menu\");\n    this.setState({\n      isSwimLaneOptionsMenuOpen: !this.state.isSwimLaneOptionsMenuOpen\n    });\n  };\n  render() {\n    return (\n      <div className=\"card--content myCard\">\n        <h4 className=\"text-center swimLane-title\">\n          {this.props.swimLane.title}\n          <span style={{ fontSize: 11 }}>({this.props.tickets.length})</span>\n          {\n            // <span className=\"dropdown\">\n            //   <button\n            //     className=\"btn dropdown-toggle\"\n            //     type=\"button\"\n            //     id=\"dropdownMenuButton\"\n            //     data-toggle=\"dropdown\"\n            //     aria-haspopup=\"true\"\n            //     aria-expanded=\"false\"\n            //   />\n            //   <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n            //     <a className=\"dropdown-item\" href=\"#\">\n            //       Remove Swim Lane\n            //     </a>\n            //   </div>\n            // </span>\n          }\n        </h4>\n\n        <Button\n          className=\"card-header\"\n          onClick={this.handleIsCreateTicketActive}\n          aria-labelledby=\"form-dialog-title\"\n          disableRipple\n          style={{\n            backgroundColor: \"#fff\",\n            border: \"2px solid #e8e3e0\",\n            borderRadius: 0\n          }}\n        >\n          Add Ticket &#x2b;\n        </Button>\n\n        <div className=\"card-vertical-scroll-enabled\">\n          <div className=\"text-center\">\n            {this.state.isCreateTicketActive && (\n              <CreateTicket\n                isActive={this.state.isCreateTicketActive}\n                saveNewTicket={this.handleSubmit}\n                swimLane={this.props.swimLane.title}\n                projectIdentifier={this.state.projectIdentifier}\n              />\n            )}\n          </div>\n          <Droppable droppableId={this.props.swimLane.title}>\n            {(provided, snapshot) => (\n              <TaskList\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                style={{\n                  background: snapshot.isDraggingOver\n                    ? \"linear-gradient(#2196f3, 40%,transparent)\"\n                    : null,\n                  transition: \"0.3s\"\n                }}\n              >\n                <InnerList\n                  tickets={this.props.tickets}\n                  removeTicket={this.props.removeTicket}\n                  swimLaneId={this.props.swimLane.title}\n                  projectIdentifier={this.props.projectIdentifier}\n                  onChange={this.handleChange}\n                />\n                {provided.placeholder}\n              </TaskList>\n            )}\n          </Droppable>\n        </div>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(SwimLane);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport SwimLane from \"./SwimLane\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nconst styles = theme => ({\n  createButton: {\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n    border: 0,\n    borderRadius: 3,\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n    color: \"white\",\n    height: 48,\n    padding: \"0 30px\"\n  },\n  error: {\n    color: \"red\",\n    fontSize: 12\n  },\n  newButton: {\n    color: \"#fff\"\n  }\n});\n\nclass TicketBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectTickets: [],\n      swimLanes: [],\n      swimLaneOrder: [],\n      projectIdentifier: this.props.projectIdentifier,\n      errors: {},\n      open: false,\n      name: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(`/dashboard/${this.state.projectIdentifier}`)\n      .then(json => {\n        this.setState({\n          projectTickets: json.data.tickets,\n          swimLanes: json.data.swimLanes,\n          swimLaneOrder: json.data.swimLaneOrder\n        });\n      })\n      .catch(json => {\n        this.setState({\n          errors: {\n            projectError: json.response.data.project\n          }\n        });\n      });\n  }\n\n  handleTicketDelete = ticket => {\n    const { projectTickets, swimLanes } = this.state;\n    const { projectIdentifier, id, swimLane } = ticket;\n    axios\n      .delete(`/dashboard/${projectIdentifier}/${swimLane}/${id}`, {\n        data: ticket\n      })\n      .then(() => {\n        if (projectTickets[0][ticket.projectSequence] === ticket) {\n          delete projectTickets[0][ticket.projectSequence];\n        }\n\n        const allSwimLanes = [...swimLanes];\n        allSwimLanes.forEach(swimLane => {\n          const objectKey = Object.keys(swimLane);\n          if (swimLane[objectKey][\"title\"] === ticket.swimLane) {\n            const index = swimLane[objectKey][\"ticketIds\"].indexOf(\n              ticket.projectSequence\n            );\n            swimLane[objectKey][\"ticketIds\"].splice(index, 1);\n          }\n        });\n\n        this.setState({\n          projectTickets: projectTickets,\n          swimLanes: allSwimLanes\n        });\n      });\n  };\n\n  handleChange = event => {\n    // console.log(\"value:  \" + event.target.value);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false, errors: {} });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const newSwimlane = {\n      name: this.state.name\n    };\n    axios\n      .post(`/dashboard/${this.state.projectIdentifier}`, newSwimlane)\n      .then(json => {\n        this.setState({\n          swimLanes: [...this.state.swimLanes, json.data],\n          swimLaneOrder: [...this.state.swimLaneOrder, Object.keys(json.data)]\n        });\n      })\n      .then(() => this.handleClose())\n      .catch(json => {\n        this.setState({\n          errors: json.response.data\n        });\n        return;\n      });\n  };\n\n  handleAddTicket = ticket => {\n    axios\n      .post(`/dashboard/${ticket.projectIdentifier}/${ticket.swimLane}`, ticket)\n      .then(json => {\n        let newProjectTickets = [...this.state.projectTickets];\n        if (newProjectTickets.length === 0) {\n          newProjectTickets.push({\n            [Object.keys(json.data)[0].toString()]: json.data[\n              Object.keys(json.data)[0].toString()\n            ]\n          });\n        } else {\n          newProjectTickets[0][Object.keys(json.data)[0].toString()] =\n            json.data[Object.keys(json.data)[0].toString()];\n        }\n\n        let modifiedSwimLanes = [...this.state.swimLanes];\n        const singleSwimLane = this.state.swimLanes.filter(swimLane => {\n          return Object.keys(swimLane).toString() === ticket.swimLane;\n        });\n        let swimLaneTicketIds = singleSwimLane[0][ticket.swimLane][\"ticketIds\"];\n        swimLaneTicketIds.push(Object.keys(json.data)[0].toString());\n        const index = modifiedSwimLanes.indexOf(singleSwimLane[0]);\n        modifiedSwimLanes.splice(index, 1);\n        modifiedSwimLanes.splice(index, 0, singleSwimLane[0]);\n\n        this.setState({\n          projectTickets: newProjectTickets,\n          swimLanes: modifiedSwimLanes\n        });\n      });\n  };\n\n  onDragEnd = result => {\n    document.body.style.color = \"inherit\";\n    const { destination, source, draggableId } = result;\n\n    if (\n      !destination ||\n      (destination.droppableId === source.droppableId &&\n        destination.index === source.index)\n    ) {\n      return;\n    }\n\n    const start = this.state.swimLanes.filter(swimLane => {\n      return Object.keys(swimLane)[0] === source.droppableId ? swimLane : null;\n    });\n\n    const finish = this.state.swimLanes.filter(swimLane => {\n      return Object.keys(swimLane)[0] === destination.droppableId\n        ? swimLane\n        : null;\n    });\n\n    if (start[0] === finish[0]) {\n      const swimLaneData = start[0][source.droppableId];\n      const newTaskIds = Array.from(swimLaneData.ticketIds);\n\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const reorderedTicketIds = {\n        ...swimLaneData,\n        ticketIds: newTaskIds\n      };\n\n      const modifiedSwimLane = {\n        [source.droppableId]: reorderedTicketIds\n      };\n\n      const tempAllSwimlanes = [...this.state.swimLanes];\n      const indexOfSwimLane = tempAllSwimlanes.indexOf(start[0]);\n      tempAllSwimlanes.splice(indexOfSwimLane, 1);\n      tempAllSwimlanes.splice(indexOfSwimLane, 0, modifiedSwimLane);\n      const newState = {\n        ...this.state,\n        swimLanes: tempAllSwimlanes\n      };\n\n      this.setState(newState);\n      this.updateSwimLaneIdOrder(reorderedTicketIds);\n      return;\n    }\n\n    //moving from one list to another\n    const startTaskIds = Array.from(start[0][source.droppableId].ticketIds);\n    startTaskIds.splice(source.index, 1);\n\n    const updatedStartSwimLane = {\n      ...start[0][source.droppableId],\n      ticketIds: startTaskIds\n    };\n\n    const finishTaskIds = Array.from(\n      finish[0][destination.droppableId].ticketIds\n    );\n    finishTaskIds.splice(destination.index, 0, draggableId);\n\n    const updatedFinishSwimLane = {\n      ...finish[0][destination.droppableId],\n      ticketIds: finishTaskIds\n    };\n\n    const modifiedStartSwimLane = {\n      [source.droppableId]: updatedStartSwimLane\n    };\n    const modifiedFinishSwimLane = {\n      [destination.droppableId]: updatedFinishSwimLane\n    };\n\n    const tempAllSwimlanes = [...this.state.swimLanes];\n    const indexOfStartSwimLane = tempAllSwimlanes.indexOf(start[0]);\n    const indexOfFinishSwimLane = tempAllSwimlanes.indexOf(finish[0]);\n\n    tempAllSwimlanes.splice(indexOfStartSwimLane, 1);\n    tempAllSwimlanes.splice(indexOfStartSwimLane, 0, modifiedStartSwimLane);\n    tempAllSwimlanes.splice(indexOfFinishSwimLane, 1);\n    tempAllSwimlanes.splice(indexOfFinishSwimLane, 0, modifiedFinishSwimLane);\n\n    const newState = {\n      ...this.state,\n      swimLanes: tempAllSwimlanes\n    };\n    this.setState(newState);\n    this.udpateSwimLanesWithNewTickets(\n      updatedStartSwimLane,\n      updatedFinishSwimLane\n    );\n  };\n\n  updateSwimLaneIdOrder = reorderedTicketIds => {\n    axios.patch(\n      `/dashboard/${this.state.projectIdentifier}/${reorderedTicketIds.title}`,\n      reorderedTicketIds\n    );\n  };\n\n  udpateSwimLanesWithNewTickets = (\n    updatedStartSwimLane,\n    updatedFinishSwimLane\n  ) => {\n    const udpatedSwimLanes = Array.of(\n      updatedStartSwimLane,\n      updatedFinishSwimLane\n    );\n    axios.patch(`/dashboard/${this.state.projectIdentifier}`, udpatedSwimLanes);\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container-fluid\">\n        {this.state.errors.projectError && (\n          <div className=\"container alert alert-danger text-center\">\n            {this.state.errors.projectError}\n          </div>\n        )}\n\n        <section className=\"myScrollableDiv\">\n          <DragDropContext\n            onDragEnd={this.onDragEnd}\n            onDragStart={this.onDragStart}\n          >\n            {this.state.swimLaneOrder.map((swimLaneId, index) => {\n              const swimLane = this.state.swimLanes[index][swimLaneId];\n              const tickets = swimLane.ticketIds.map(\n                ticketId => this.state.projectTickets[0][ticketId]\n              );\n              return (\n                <SwimLane\n                  key={swimLane.title}\n                  swimLane={swimLane}\n                  tickets={tickets}\n                  projectIdentifier={this.props.projectIdentifier}\n                  removeTicket={this.handleTicketDelete}\n                  addTicketToSwimLane={this.handleAddTicket}\n                />\n              );\n            })}\n          </DragDropContext>\n          <div className=\"col-10 col-lg-3\">\n            {!this.state.errors.projectError && (\n              <Button\n                variant=\"outlined\"\n                className={classes.newButton}\n                onClick={this.handleClickOpen}\n                disableRipple\n              >\n                New Swimlane &#x2b;\n              </Button>\n            )}\n            <Dialog\n              open={this.state.open}\n              onClose={this.handleClose}\n              aria-labelledby=\"form-dialog-title\"\n            >\n              <form onSubmit={this.handleSubmit}>\n                <DialogContent>\n                  <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    name=\"name\"\n                    label=\"Swimlane Name\"\n                    type=\"text\"\n                    fullWidth\n                    onChange={this.handleChange}\n                  />\n                  {errors.name && (\n                    <span className={classes.error}>{errors.name}</span>\n                  )}\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={this.handleClose} color=\"primary\">\n                    Cancel\n                  </Button>\n                  <Button color=\"primary\" type=\"submit\">\n                    Create\n                  </Button>\n                </DialogActions>\n              </form>\n            </Dialog>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(TicketBoard);\n","import React, { Component } from \"react\";\nimport \"./projectDashboard.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport TicketBoard from \"./TicketBoard\";\n\nclass ProjectDashboard extends Component {\n  render() {\n    const activeProject = this.props.match.params.projectIdentifier;\n    return (\n      <div className=\"project\">\n        {<TicketBoard projectIdentifier={activeProject} />}\n      </div>\n    );\n  }\n}\n\nexport default ProjectDashboard;\n","import React, { Component } from \"react\";\nimport \"./landing.css\";\nimport store from \"../../store\";\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default class Landing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirectToDashboard: false\n    };\n  }\n\n  setRedirectToDashboard = () => {\n    this.setState({ redirectToDashboard: true });\n  };\n  componentDidMount() {\n    if (store.getState().security.validToken) {\n      this.setRedirectToDashboard();\n    }\n  }\n  render() {\n    return (\n      <div className=\"container text-center\">\n        {this.state.redirectToDashboard && <Redirect to=\"/dashboard\" />}\n        <h1 className=\"mt-5 text-white font-weight-light\">Trellban</h1>\n        <p className=\"lead text-white-50\">\n          Your Personal Project Management Tool\n        </p>\n        <hr />\n        <Link to=\"/login\" className={\"landingButton\"}>\n          <Button type=\"button\" variant=\"contained\" color=\"primary\">\n            Login\n          </Button>\n        </Link>\n        <Link to=\"/register\" className={\"landingButton\"}>\n          <Button type=\"button\" variant=\"contained\" color=\"secondary\">\n            Register\n          </Button>\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { setJwt } from \"../../security/SetJwt\";\nimport jwt_decode from \"jwt-decode\";\nimport store from \"../../store\";\nimport { SET_CURRENT_USER } from \"../../actions/Types\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {},\n      redirectToDashboard: false\n    };\n  }\n\n  componentDidMount() {\n    if (store.getState().security.validToken) {\n      this.setRedirectToDashboard();\n    }\n  }\n\n  setRedirectToDashboard = () => {\n    this.setState({ redirectToDashboard: true });\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { email, password } = this.state;\n    const existingUser = {\n      email: email,\n      password: password\n    };\n\n    axios\n      .post(\"/api/users/login\", existingUser)\n      .then(json => {\n        const { token } = json.data;\n        localStorage.setItem(\"jwt\", token);\n        setJwt(token);\n        const decode = jwt_decode(token);\n\n        store.dispatch({\n          type: SET_CURRENT_USER,\n          payload: decode\n        });\n        this.setRedirectToDashboard();\n      })\n\n      .catch(json =>\n        this.setState({\n          errors: json.response.data\n        })\n      );\n  };\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"container py-5\">\n        {this.state.redirectToDashboard && <Redirect to=\"/dashboard\" />}\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"row\">\n              <div className=\"col-md-6 mx-auto\">\n                <div className=\"card rounded-0\">\n                  <div className=\"card-header\">\n                    <h3 className=\"mb-0\">Login</h3>\n                  </div>\n                  <div className=\"card-body\">\n                    <form\n                      className=\"form\"\n                      autoComplete=\"off\"\n                      id=\"formLogin\"\n                      noValidate=\"\"\n                      onSubmit={this.handleSubmit}\n                      method=\"POST\"\n                    >\n                      <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email Address</label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-lg rounded-0\"\n                          name=\"email\"\n                          id=\"email\"\n                          required\n                          onChange={this.handleChange}\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <label>Password</label>\n                        <input\n                          type=\"password\"\n                          className=\"form-control form-control-lg rounded-0\"\n                          name=\"password\"\n                          id=\"password\"\n                          required\n                          autoComplete=\"new-password\"\n                          onChange={this.handleChange}\n                        />\n                        {Object.keys(errors).length !== 0 && (\n                          <div>Email address and password do not match</div>\n                        )}\n                      </div>\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-success btn-lg float-right\"\n                        id=\"btnLogin\"\n                      >\n                        Login\n                      </button>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport store from \"../../store\";\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {},\n      redirectToLogin: false,\n      redirectToDashboard: false\n    };\n  }\n\n  setRedirectToDashboard = () => {\n    this.setState({ redirectToDashboard: true });\n  };\n\n  componentDidMount() {\n    if (store.getState().security.validToken) {\n      this.setRedirectToDashboard();\n    }\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  setRedirect = () => {\n    this.setState({\n      redirectToLogin: true\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const {\n      email,\n      firstName,\n      lastName,\n      password,\n      confirmPassword\n    } = this.state;\n    const newUser = {\n      email: email,\n      firstName: firstName,\n      lastName: lastName,\n      password: password,\n      confirmPassword: confirmPassword\n    };\n\n    axios\n      .post(\"/api/users/register\", newUser)\n      .then(json => {\n        this.setRedirect();\n      })\n      .catch(json => {\n        this.setState({ errors: json.response.data });\n      });\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"container py-5\">\n        {this.state.redirectToLogin && <Redirect to=\"/login\" />}\n        {this.state.redirectToDashboard && <Redirect to=\"/dashboard\" />}\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"row\">\n              <div className=\"col-md-6 mx-auto\">\n                <div className=\"card rounded-0\">\n                  <div className=\"card-header\">\n                    <h3 className=\"mb-0\">Register</h3>\n                  </div>\n                  <div className=\"card-body\">\n                    <form\n                      className=\"form\"\n                      autoComplete=\"off\"\n                      id=\"formLogin\"\n                      noValidate=\"\"\n                      onSubmit={this.handleSubmit}\n                    >\n                      <div className=\"form-group\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-lg rounded-0\"\n                          name=\"firstName\"\n                          id=\"firstName\"\n                          required\n                          onChange={this.handleChange}\n                          method=\"POST\"\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-lg rounded-0\"\n                          name=\"lastName\"\n                          id=\"lastName\"\n                          required\n                          onChange={this.handleChange}\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email Address</label>\n                        <input\n                          type=\"email\"\n                          className=\"form-control form-control-lg rounded-0\"\n                          name=\"email\"\n                          id=\"email\"\n                          required\n                          onChange={this.handleChange}\n                        />\n                        {errors.email && <div>{errors.email}</div>}\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                          type=\"password\"\n                          className=\"form-control form-control-lg rounded-0\"\n                          name=\"password\"\n                          id=\"password\"\n                          required\n                          onChange={this.handleChange}\n                        />\n                        {errors.password && <div>{errors.password}</div>}\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"confirmPassword\">\n                          Confirm Password\n                        </label>\n                        <input\n                          type=\"password\"\n                          className=\"form-control form-control-lg rounded-0\"\n                          name=\"confirmPassword\"\n                          id=\"confirmPassword\"\n                          required\n                          onChange={this.handleChange}\n                        />\n                        {errors.confirmPassword && (\n                          <div>{errors.confirmPassword}</div>\n                        )}\n                      </div>\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-success btn-lg float-right\"\n                        id=\"btnLogin\"\n                      >\n                        Register\n                      </button>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport store from \"./store\";\n\nconst PrivateRoute = ({ component: Component, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      store.getState().security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nexport default PrivateRoute;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./projectItem.css\";\nimport Dashboard from \"./components/Project/projectView/Dashboard\";\nimport Navbar from \"./components/Layout/Navbar\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ProjectDashboard from \"./components/Project/ProjectDashboard/ProjectDashboard\";\nimport Landing from \"./components/Layout/Landing\";\nimport Login from \"./components/Layout/Login\";\nimport Register from \"./components/Layout/Register\";\n\nimport PrivateRoute from \"./PrivateRoute\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport jwt_decode from \"jwt-decode\";\nimport { setJwt } from \"./security/SetJwt\";\nimport { SET_CURRENT_USER } from \"./actions/Types\";\n\nconst userJwt = localStorage.getItem(\"jwt\");\nif (userJwt) {\n  setJwt(userJwt);\n  const decodedToken = jwt_decode(userJwt);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decodedToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decodedToken.exp < currentTime) {\n    localStorage.removeItem(\"jwt\");\n    setJwt(false);\n    store.dispatch({\n      type: SET_CURRENT_USER,\n      payload: {}\n    });\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n              <PrivateRoute\n                exact\n                path=\"/dashboard/:projectIdentifier\"\n                component={ProjectDashboard}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}