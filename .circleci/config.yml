version: 2
jobs:
  build-frontend:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo
    steps:
      - checkout

      - restore_cache: # special step to restore the dependency cache
          key: dependency-cache-{{ checksum "./client/package.json" }}

      - save_cache:
          paths:
            - ./node_modules
          key: dependency-cache-{{ checksum "./client/package.json" }}

      - run:
          name: Setup Dependencies
          command: cd client && yarn install
      - run:
          name: Build js files
          command: cd client && yarn build

      - run: mkdir -p workspace

      - persist_to_workspace:
          root: workspace
          paths: client/build
      - run:
          name: verify build has been persisted
          command: ls -la /workspace/client/build

  build-backend:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "./server/pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: cd server && mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "./server/pom.xml" }}

      # run tests!
      - run:
          name: rebuild backend
          command: cd server && mvn clean install

  deploy-to-heroku:
    machine:
      enabled: true
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: git subtree push --prefix server https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP.git master

workflows:
  version: 2
  build_backend_and_front_end:
    jobs:
      - build-frontend
      - build-backend:
          requires:
            - build-frontend
      - deploy-to-heroku:
          requires:
            - build-backend
